{"ast":null,"code":"import { gsap } from 'gsap';\nimport { Howl } from 'howler';\nexport default {\n  data() {\n    return {\n      score: 0,\n      notes: [],\n      hitPosition: 100,\n      song: new Howl({\n        src: ['path/to/your/song.mp3'],\n        onplay: this.onSongPlay\n      })\n    };\n  },\n\n  mounted() {\n    window.addEventListener('keydown', this.handleKeydown);\n    this.song.play();\n  },\n\n  beforeUnmount() {\n    window.removeEventListener('keydown', this.handleKeydown);\n  },\n\n  methods: {\n    onSongPlay() {\n      // Add your note timings here\n      const noteTimings = [1, 2, 3, 4, 5]; // in seconds\n\n      noteTimings.forEach(timing => {\n        const delay = timing - this.hitPosition / 1000;\n        this.notes.push({\n          position: 0,\n          hit: false\n        });\n        gsap.to(this.notes[this.notes.length - 1], {\n          position: this.hitPosition,\n          duration: delay,\n          onComplete: () => {\n            if (!this.notes[0].hit) {\n              this.notes.shift();\n            }\n          }\n        });\n      });\n    },\n\n    handleKeydown(event) {\n      if (event.code === 'Space') {\n        const note = this.notes[0];\n\n        if (note && note.position >= this.hitPosition - 10 && note.position <= this.hitPosition + 10) {\n          note.hit = true;\n          this.score += 10;\n        }\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAgBA,SAASA,IAAT,QAAqB,MAArB;AACA,SAASC,IAAT,QAAqB,QAArB;AAEA,eAAe;AACbC,MAAI,GAAG;AACL,WAAO;AACLC,WAAK,EAAE,CADF;AAELC,WAAK,EAAE,EAFF;AAGLC,iBAAW,EAAE,GAHR;AAILC,UAAI,EAAE,IAAIL,IAAJ,CAAS;AACbM,WAAG,EAAE,CAAC,uBAAD,CADQ;AAEbC,cAAM,EAAE,KAAKC;AAFA,OAAT;AAJD,KAAP;AASD,GAXY;;AAYbC,SAAO,GAAG;AACRC,UAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmC,KAAKC,aAAxC;AACA,SAAKP,IAAL,CAAUQ,IAAV;AACD,GAfY;;AAgBbC,eAAa,GAAG;AACdJ,UAAM,CAACK,mBAAP,CAA2B,SAA3B,EAAsC,KAAKH,aAA3C;AACD,GAlBY;;AAmBbI,SAAO,EAAE;AACPR,cAAU,GAAG;AACX;AACA,YAAMS,WAAU,GAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAApB,CAFW,CAE0B;;AAErCA,iBAAW,CAACC,OAAZ,CAAqBC,MAAD,IAAY;AAC9B,cAAMC,KAAI,GAAID,MAAK,GAAI,KAAKf,WAAL,GAAmB,IAA1C;AAEA,aAAKD,KAAL,CAAWkB,IAAX,CAAgB;AAAEC,kBAAQ,EAAE,CAAZ;AAAeC,aAAG,EAAE;AAApB,SAAhB;AAEAxB,YAAI,CAACyB,EAAL,CAAQ,KAAKrB,KAAL,CAAW,KAAKA,KAAL,CAAWsB,MAAX,GAAoB,CAA/B,CAAR,EAA2C;AACzCH,kBAAQ,EAAE,KAAKlB,WAD0B;AAEzCsB,kBAAQ,EAAEN,KAF+B;AAGzCO,oBAAU,EAAE,MAAM;AAChB,gBAAI,CAAC,KAAKxB,KAAL,CAAW,CAAX,EAAcoB,GAAnB,EAAwB;AACtB,mBAAKpB,KAAL,CAAWyB,KAAX;AACF;AACD;AAPwC,SAA3C;AASD,OAdD;AAeD,KApBM;;AAqBPhB,iBAAa,CAACiB,KAAD,EAAQ;AACnB,UAAIA,KAAK,CAACC,IAAN,KAAe,OAAnB,EAA4B;AAC1B,cAAMC,IAAG,GAAI,KAAK5B,KAAL,CAAW,CAAX,CAAb;;AAEA,YAAI4B,IAAG,IAAKA,IAAI,CAACT,QAAL,IAAiB,KAAKlB,WAAL,GAAmB,EAA5C,IAAkD2B,IAAI,CAACT,QAAL,IAAiB,KAAKlB,WAAL,GAAmB,EAA1F,EAA8F;AAC5F2B,cAAI,CAACR,GAAL,GAAW,IAAX;AACA,eAAKrB,KAAL,IAAc,EAAd;AACF;AACF;AACD;;AA9BM;AAnBI,CAAf","names":["gsap","Howl","data","score","notes","hitPosition","song","src","onplay","onSongPlay","mounted","window","addEventListener","handleKeydown","play","beforeUnmount","removeEventListener","methods","noteTimings","forEach","timing","delay","push","position","hit","to","length","duration","onComplete","shift","event","code","note"],"sourceRoot":"","sources":["C:\\Users\\kk\\Desktop\\Web\\Web-Project\\vuejs\\game-master\\src\\components\\menus\\DancePage.vue"],"sourcesContent":["<template>\r\n  <div class=\"rhythm-game\">\r\n    <div class=\"score\">점수: {{ score }}</div>\r\n    <div class=\"note-lane\" ref=\"noteLane\">\r\n      <div\r\n        class=\"note\"\r\n        v-for=\"(note, index) in notes\"\r\n        :key=\"index\"\r\n        :class=\"{ hit: note.hit }\"\r\n        :style=\"{ top: note.position + 'px' }\"\r\n      ></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { gsap } from 'gsap';\r\nimport { Howl } from 'howler';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      score: 0,\r\n      notes: [],\r\n      hitPosition: 100,\r\n      song: new Howl({\r\n        src: ['path/to/your/song.mp3'],\r\n        onplay: this.onSongPlay,\r\n      }),\r\n    };\r\n  },\r\n  mounted() {\r\n    window.addEventListener('keydown', this.handleKeydown);\r\n    this.song.play();\r\n  },\r\n  beforeUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeydown);\r\n  },\r\n  methods: {\r\n    onSongPlay() {\r\n      // Add your note timings here\r\n      const noteTimings = [1, 2, 3, 4, 5]; // in seconds\r\n\r\n      noteTimings.forEach((timing) => {\r\n        const delay = timing - this.hitPosition / 1000;\r\n\r\n        this.notes.push({ position: 0, hit: false });\r\n\r\n        gsap.to(this.notes[this.notes.length - 1], {\r\n          position: this.hitPosition,\r\n          duration: delay,\r\n          onComplete: () => {\r\n            if (!this.notes[0].hit) {\r\n              this.notes.shift();\r\n            }\r\n          },\r\n        });\r\n      });\r\n    },\r\n    handleKeydown(event) {\r\n      if (event.code === 'Space') {\r\n        const note = this.notes[0];\r\n\r\n        if (note && note.position >= this.hitPosition - 10 && note.position <= this.hitPosition + 10) {\r\n          note.hit = true;\r\n          this.score += 10;\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.rhythm-game {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.note-lane {\r\n  position: relative;\r\n  width: 100px;\r\n  height: 300px;\r\n  border: 1px solid #000;\r\n}\r\n\r\n.note {\r\n  position: absolute;\r\n  width: 50px;\r\n  height: 50px;\r\n  background-color: #f00;\r\n  opacity: 1;\r\n  left: 25px;\r\n}\r\n\r\n.note.hit {\r\n  opacity: 0;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}