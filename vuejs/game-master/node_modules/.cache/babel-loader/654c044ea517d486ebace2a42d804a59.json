{"ast":null,"code":"import { gsap } from 'gsap';\nimport { Howl } from 'howler';\nexport default {\n  data() {\n    return {\n      score: 0,\n      directionKeys: [{\n        key: 'ArrowLeft',\n        notes: []\n      }, {\n        key: 'ArrowUp',\n        notes: []\n      }, {\n        key: 'ArrowDown',\n        notes: []\n      }, {\n        key: 'ArrowRight',\n        notes: []\n      }],\n      hitPosition: 100,\n      song: new Howl({\n        src: ['path/to/your/song.mp3'],\n        onplay: this.onSongPlay\n      }),\n      showDanceAnimation: false\n    };\n  },\n\n  mounted() {\n    window.addEventListener('keydown', this.handleKeydown);\n    this.song.play();\n  },\n\n  beforeUnmount() {\n    window.removeEventListener('keydown', this.handleKeydown);\n  },\n\n  methods: {\n    onSongPlay() {\n      // Add your note timings and directions here\n      const noteTimings = [{\n        timing: 1,\n        direction: 'ArrowLeft'\n      }, {\n        timing: 2,\n        direction: 'ArrowUp'\n      }, {\n        timing: 3,\n        direction: 'ArrowDown'\n      }, {\n        timing: 4,\n        direction: 'ArrowRight'\n      }];\n      noteTimings.forEach(noteTiming => {\n        const delay = noteTiming.timing - this.hitPosition / 1000;\n        const key = this.directionKeys.find(key => key.key === noteTiming.direction);\n        key.notes.push({\n          position: 0,\n          hit: false\n        });\n        gsap.to(key.notes[key.notes.length - 1], {\n          position: this.hitPosition,\n          duration: delay,\n          onComplete: () => {\n            if (!key.notes[0].hit) {\n              key.notes.shift();\n            }\n          }\n        });\n      });\n    },\n\n    handleKeydown(event) {\n      const key = this.directionKeys.find(key => key.key === event.code);\n\n      if (key) {\n        const note = key.notes[0];\n\n        if (note && note.position >= this.hitPosition - 10 && note.position <= this.hitPosition + 10) {\n          note.hit = true;\n          this.score += 10;\n          this.showDanceAnimation = true;\n          setTimeout(() => {\n            this.showDanceAnimation = false;\n          }, 500);\n        }\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["gsap","Howl","data","score","directionKeys","key","notes","hitPosition","song","src","onplay","onSongPlay","showDanceAnimation","mounted","window","addEventListener","handleKeydown","play","beforeUnmount","removeEventListener","methods","noteTimings","timing","direction","forEach","noteTiming","delay","find","push","position","hit","to","length","duration","onComplete","shift","event","code","note","setTimeout"],"sourceRoot":"","sources":["C:\\Users\\kk\\Desktop\\Web\\Web-Project\\vuejs\\game-master\\src\\components\\menus\\DancePage.vue"],"sourcesContent":["<template>\r\n   <div class=\"rhythm-game\">\r\n      <div class=\"score\">Ï†êÏàò: {{ score }}</div>\r\n      <div class=\"game-area\">\r\n         <button class=\"chicken\" disabled>üêî</button>\r\n      <button class=\"dance-animation\" v-if=\"showDanceAnimation\" disabled>üíÉ</button>\r\n         <div class=\"note-lanes\">\r\n            <div v-for=\"(key, index) in directionKeys\" :key=\"index\" class=\"note-lane\" ref=\"noteLane\">\r\n               <div class=\"note\" v-for=\"(note, noteIndex) in key.notes\" :key=\"noteIndex\" :class=\"{ hit: note.hit }\"\r\n                  :style=\"{ top: note.position + 'px' }\"></div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   </div>\r\n</template>\r\n \r\n<script>\r\nimport { gsap } from 'gsap';\r\nimport { Howl } from 'howler';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      score: 0,\r\n      directionKeys: [\r\n        { key: 'ArrowLeft', notes: [] },\r\n        { key: 'ArrowUp', notes: [] },\r\n        { key: 'ArrowDown', notes: [] },\r\n        { key: 'ArrowRight', notes: [] },\r\n      ],\r\n      hitPosition: 100,\r\n      song: new Howl({\r\n        src: ['path/to/your/song.mp3'],\r\n        onplay: this.onSongPlay,\r\n      }),\r\n      showDanceAnimation: false,\r\n    };\r\n  },\r\n  mounted() {\r\n    window.addEventListener('keydown', this.handleKeydown);\r\n    this.song.play();\r\n  },\r\n  beforeUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeydown);\r\n  },\r\n  methods: {\r\n    onSongPlay() {\r\n      // Add your note timings and directions here\r\n      const noteTimings = [\r\n        { timing: 1, direction: 'ArrowLeft' },\r\n        { timing: 2, direction: 'ArrowUp' },\r\n        { timing: 3, direction: 'ArrowDown' },\r\n        { timing: 4, direction: 'ArrowRight' },\r\n      ];\r\n\r\n      noteTimings.forEach((noteTiming) => {\r\n        const delay = noteTiming.timing - this.hitPosition / 1000;\r\n        const key = this.directionKeys.find((key) => key.key === noteTiming.direction);\r\n\r\n        key.notes.push({ position: 0, hit: false });\r\n\r\n        gsap.to(key.notes[key.notes.length - 1], {\r\n          position: this.hitPosition,\r\n          duration: delay,\r\n          onComplete: () => {\r\n            if (!key.notes[0].hit) {\r\n              key.notes.shift();\r\n            }\r\n          },\r\n        });\r\n      });\r\n    },\r\n    handleKeydown(event) {\r\n  const key = this.directionKeys.find((key) => key.key === event.code);\r\n\r\n  if (key) {\r\n    const note = key.notes[0];\r\n\r\n    if (note && note.position >= this.hitPosition - 10 && note.position <= this.hitPosition + 10) {\r\n      note.hit = true;\r\n      this.score += 10;\r\n      this.showDanceAnimation = true;\r\n      setTimeout(() => {\r\n        this.showDanceAnimation = false;\r\n      }, 500);\r\n    }\r\n  }\r\n},\r\n  },\r\n};\r\n </script>\r\n \r\n <style scoped>\r\n .rhythm-game {\r\n   display: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\n}\r\n\r\n.score {\r\nmargin-bottom: 20px;\r\n}\r\n\r\n.note-lanes {\r\ndisplay: flex;\r\n}\r\n\r\n.note-lane {\r\nposition: relative;\r\nwidth: 100px;\r\nheight: 300px;\r\nborder: 1px solid #000;\r\n}\r\n\r\n.note {\r\nposition: absolute;\r\nwidth: 50px;\r\nheight: 50px;\r\nbackground-color: #f00;\r\nopacity: 1;\r\nleft: 25px;\r\n}\r\n\r\n.note.hit {\r\nopacity: 0;\r\n}\r\n\r\n.game-area {\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.chicken {\r\n  position: absolute;\r\n  font-size: 2rem;\r\n  border: none;\r\n  background: transparent;\r\n  cursor: default;\r\n}\r\n\r\n.dance-animation {\r\n  position: absolute;\r\n  font-size: 2rem;\r\n  border: none;\r\n  background: transparent;\r\n  cursor: default;\r\n}\r\n </style>"]},"metadata":{},"sourceType":"module"}