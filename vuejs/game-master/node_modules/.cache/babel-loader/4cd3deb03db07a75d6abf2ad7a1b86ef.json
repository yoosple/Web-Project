{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-a06025e0\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = [\"onClick\"];\nconst _hoisted_2 = [\"data-number\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"board\", _ctx.crossClass])\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList([...Array(9).keys()], order => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"cell\",\n      key: order,\n      onClick: $event => $options.cellClicked(order)\n    }, [_createElementVNode(\"span\", null, _toDisplayString($options.getCellSign(order)), 1\n    /* TEXT */\n    ), _createElementVNode(\"div\", {\n      class: \"cell-number\",\n      \"data-number\": order + 1\n    }, null, 8\n    /* PROPS */\n    , _hoisted_2)], 8\n    /* PROPS */\n    , _hoisted_1);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))], 2\n  /* CLASS */\n  );\n}","map":{"version":3,"mappings":";;;;;;;uBACEA,oBAUM,KAVN,EAUM;AAVDC,SAAK,mBAAC,OAAD,EAAiBC,eAAjB;AAUJ,GAVN,sBACEF,oBAQMG,SARN,EAQM,IARN,EAQMC,gBARmBC,KAAK,GAAL,CAASC,IAAT,EAQnB,GARMC,KAA0B,IAArB;yBAAjBP,oBAQM,KARN,EAQM;AAPDC,WAAK,EAAC,MAOL;AANAO,SAAG,EAAED,KAML;AALAE,aAAK,YAAEC,qBAAYH,KAAZ;AAKP,KARN,GAIEI,oBAEO,MAFP,EAEO,IAFP,EAEOC,iBADFF,qBAAYH,KAAZ,CACE,CAFP,EACsB;AAAA;AADtB,OAGAI,oBAAwD,KAAxD,EAAwD;AAAnDV,WAAK,EAAC,aAA6C;AAA9B,qBAAaM,KAAK;AAAY,KAAxD;;AAAA,kBAPF;;AAAA;GAQM,CARN;;AAAA,KADF;;AAAA","names":["_createElementBlock","class","_ctx","_Fragment","_renderList","Array","keys","order","key","onClick","$options","_createElementVNode","_toDisplayString"],"sourceRoot":"","sources":["C:\\Users\\kk\\Desktop\\Web\\Web-Project\\vuejs\\game-master\\src\\components\\menus\\tic-tac-toe\\Board.vue"],"sourcesContent":["<template>\r\n  <div class=\"board\" :class=\"crossClass\">\r\n    <div v-for=\"order in [...Array(9).keys()] \"\r\n         class=\"cell\"\r\n         :key=\"order\"\r\n         @click=\"cellClicked(order)\">\r\n      <span>\r\n        {{ getCellSign(order) }}\r\n      </span>\r\n      <div class=\"cell-number\" :data-number=\"order + 1\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {mapGetters, mapActions} from \"vuex\";\r\nexport default {\r\n  name: \"Board\",\r\n  data() {\r\n    return {\r\n      processing: false,\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n      'cells',\r\n      'finished',\r\n      'crossClass',\r\n      'sign',\r\n      'signO',\r\n      'signX',\r\n      'started',\r\n    ])\r\n  },\r\n  methods: {\r\n    ...mapActions([\r\n        'addCell',\r\n        'setSign',\r\n    ]),\r\n    cellClicked(order) {\r\n      if (this.started && !this.finished && !this.processing) {\r\n        // current cell of entered order\r\n        const currentCell = this.cells.find(c => c.order === order)\r\n        // if current cell exist, don't anything\r\n        if (!currentCell) {\r\n          this.processing = true;\r\n          // add cell to cell - store\r\n          this.addCell({order: order, sign: this.sign})\r\n          // change sign\r\n          this.setSign(this.sign === this.signX ? this.signO : this.signX)\r\n          setTimeout(() => {\r\n            this.processing = false\r\n          }, 333)\r\n        }\r\n      }\r\n    },\r\n    getCellSign(order) {\r\n      // find the cell\r\n      const cell = this.cells.find(c => c.order === order)\r\n      if (!cell) {\r\n        return ''\r\n      }\r\n      return cell.sign\r\n    },\r\n  },\r\n  mounted() {\r\n    // listen keydown and click cell\r\n    document.addEventListener('keydown', e => {\r\n      const number = parseInt(e.key);\r\n      if (number > 0 && number < 10) {\r\n        this.cellClicked(number - 1)\r\n      }\r\n    })\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n@import url('https://fonts.googleapis.com/css2?family=Gochi+Hand&display=swap');\r\n.board {\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  width: 420px;\r\n  height: 420px;\r\n  overflow: hidden;\r\n  position: relative;\r\n}\r\n.cell {\r\n  position: relative;\r\n  font-family: 'Gochi Hand', cursive;\r\n  width: 140px;\r\n  height: 140px;\r\n  outline: 1px solid whitesmoke;\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 130px;\r\n  color: whitesmoke;\r\n}\r\n.cell-number {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n.cell span:empty + .cell-number:after {\r\n  display: flex;\r\n  justify-content: center;\r\n  content: attr(data-number);\r\n  color: rgba(255, 255, 255, 0.05);\r\n}\r\n.cross-line {\r\n  z-index: 999;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n.cross-line-012 {\r\n  background: linear-gradient(to bottom, rgba(0, 0, 0, 0) calc(16% - 4px), lime, rgba(0, 0, 0, 0) calc(16% + 4px))\r\n}\r\n.cross-line-345 {\r\n  background: linear-gradient(to top, rgba(0, 0, 0, 0) calc(50% - 4px), lime, rgba(0, 0, 0, 0) calc(50% + 4px))\r\n}\r\n.cross-line-678 {\r\n  background: linear-gradient(to top, rgba(0, 0, 0, 0) calc(16% - 4px), lime, rgba(0, 0, 0, 0) calc(16% + 4px))\r\n}\r\n.cross-line-036 {\r\n  background: linear-gradient(to right, rgba(0, 0, 0, 0) calc(16% - 4px), lime, rgba(0, 0, 0, 0) calc(16% + 4px))\r\n}\r\n.cross-line-147 {\r\n  background: linear-gradient(to left, rgba(0, 0, 0, 0) calc(50% - 4px), lime, rgba(0, 0, 0, 0) calc(50% + 4px))\r\n}\r\n.cross-line-258 {\r\n  background: linear-gradient(to left, rgba(0, 0, 0, 0) calc(16% - 4px), lime, rgba(0, 0, 0, 0) calc(16% + 4px))\r\n}\r\n.cross-line-048 {\r\n  background: linear-gradient(to top right, rgba(0, 0, 0, 0) calc(50% - 4px), lime, rgba(0, 0, 0, 0) calc(50% + 4px))\r\n}\r\n.cross-line-246 {\r\n  background: linear-gradient(to top left, rgba(0, 0, 0, 0) calc(50% - 4px), lime, rgba(0, 0, 0, 0) calc(50% + 4px))\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}