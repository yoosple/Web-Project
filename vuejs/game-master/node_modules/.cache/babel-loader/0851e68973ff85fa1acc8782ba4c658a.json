{"ast":null,"code":"export default {\n  data() {\n    return {\n      objects: [{\n        points: -Math.floor(Math.random() * (50 - 5 + 1) + 5),\n        size: 50,\n        speed: 1000\n      }, {\n        points: -Math.floor(Math.random() * (50 - 5 + 1) + 5),\n        size: 50,\n        speed: 1000\n      }, {\n        points: -Math.floor(Math.random() * (50 - 5 + 1) + 5),\n        size: 50,\n        speed: 1000\n      }, {\n        points: 5,\n        size: 50,\n        speed: 1000\n      }, {\n        points: 5,\n        size: 50,\n        speed: 1000\n      }, {\n        points: 5,\n        size: 50,\n        speed: 1000\n      }, {\n        points: 10,\n        size: 40,\n        speed: 1000\n      }, {\n        points: 10,\n        size: 40,\n        speed: 1000\n      }, {\n        points: 15,\n        size: 30,\n        speed: 1000\n      }, {\n        points: 15,\n        size: 30,\n        speed: 1000\n      }, {\n        points: 20,\n        size: 20,\n        speed: 1000\n      }, {\n        points: 30,\n        size: 10,\n        speed: 500\n      }],\n      score: 0\n    };\n  },\n\n  mounted() {\n    this.moveObjects();\n  },\n\n  methods: {\n    moveObjects() {\n      this.objects.forEach((object, index) => {\n        setInterval(() => {\n          object.x = Math.floor(Math.random() * (600 - object.size));\n          object.y = Math.floor(Math.random() * (400 - object.size));\n        }, object.speed);\n      });\n    },\n\n    objectClicked(points) {\n      this.score += points;\n    },\n\n    missedClick() {\n      this.score -= 1;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAeA,eAAe;AACZA,MAAI,GAAG;AACJ,WAAO;AACJC,aAAO,EAAE,CACN;AAAEC,cAAM,EAAE,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,KAAK,CAAL,GAAS,CAA1B,IAA+B,CAA1C,CAAX;AAAyDC,YAAI,EAAE,EAA/D;AAAmEC,aAAK,EAAE;AAA1E,OADM,EAEN;AAAEL,cAAM,EAAE,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,KAAK,CAAL,GAAS,CAA1B,IAA+B,CAA1C,CAAX;AAAyDC,YAAI,EAAE,EAA/D;AAAmEC,aAAK,EAAE;AAA1E,OAFM,EAGN;AAAEL,cAAM,EAAE,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,KAAK,CAAL,GAAS,CAA1B,IAA+B,CAA1C,CAAX;AAAyDC,YAAI,EAAE,EAA/D;AAAmEC,aAAK,EAAE;AAA1E,OAHM,EAIN;AAAEL,cAAM,EAAE,CAAV;AAAaI,YAAI,EAAE,EAAnB;AAAuBC,aAAK,EAAE;AAA9B,OAJM,EAKN;AAAEL,cAAM,EAAE,CAAV;AAAaI,YAAI,EAAE,EAAnB;AAAuBC,aAAK,EAAE;AAA9B,OALM,EAMN;AAAEL,cAAM,EAAE,CAAV;AAAaI,YAAI,EAAE,EAAnB;AAAuBC,aAAK,EAAE;AAA9B,OANM,EAON;AAAEL,cAAM,EAAE,EAAV;AAAcI,YAAI,EAAE,EAApB;AAAwBC,aAAK,EAAE;AAA/B,OAPM,EAQN;AAAEL,cAAM,EAAE,EAAV;AAAcI,YAAI,EAAE,EAApB;AAAwBC,aAAK,EAAE;AAA/B,OARM,EASN;AAAEL,cAAM,EAAE,EAAV;AAAcI,YAAI,EAAE,EAApB;AAAwBC,aAAK,EAAE;AAA/B,OATM,EAUN;AAAEL,cAAM,EAAE,EAAV;AAAcI,YAAI,EAAE,EAApB;AAAwBC,aAAK,EAAE;AAA/B,OAVM,EAWN;AAAEL,cAAM,EAAE,EAAV;AAAcI,YAAI,EAAE,EAApB;AAAwBC,aAAK,EAAE;AAA/B,OAXM,EAYN;AAAEL,cAAM,EAAE,EAAV;AAAcI,YAAI,EAAE,EAApB;AAAwBC,aAAK,EAAE;AAA/B,OAZM,CADL;AAeJC,WAAK,EAAE;AAfH,KAAP;AAiBF,GAnBW;;AAoBZC,SAAO,GAAG;AACP,SAAKC,WAAL;AACF,GAtBW;;AAuBZC,SAAO,EAAE;AACND,eAAW,GAAG;AACX,WAAKT,OAAL,CAAaW,OAAb,CAAqB,CAACC,MAAD,EAASC,KAAT,KAAmB;AACrCC,mBAAW,CAAC,MAAM;AACfF,gBAAM,CAACG,CAAP,GAAWb,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,MAAMQ,MAAM,CAACP,IAA9B,CAAX,CAAX;AACAO,gBAAM,CAACI,CAAP,GAAWd,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,MAAMQ,MAAM,CAACP,IAA9B,CAAX,CAAX;AACF,SAHU,EAGRO,MAAM,CAACN,KAHC,CAAX;AAIF,OALD;AAMF,KARK;;AASNW,iBAAa,CAAChB,MAAD,EAAS;AACnB,WAAKM,KAAL,IAAcN,MAAd;AACF,KAXK;;AAYNiB,eAAW,GAAG;AACX,WAAKX,KAAL,IAAc,CAAd;AACF;;AAdK;AAvBG,CAAf","names":["data","objects","points","Math","floor","random","size","speed","score","mounted","moveObjects","methods","forEach","object","index","setInterval","x","y","objectClicked","missedClick"],"sourceRoot":"","sources":["C:\\Users\\kk\\Desktop\\Web\\Web-Project\\vuejs\\game-master\\src\\components\\menus\\EaglePage.vue"],"sourcesContent":["<template>\r\n   <div>\r\n      <h1>움직이는 공 맞추기</h1>\r\n      <div class=\"container\">\r\n         <div id=\"game-board\" @click=\"missedClick\">\r\n            <div v-for=\"(object, index) in objects\" :key=\"index\" class=\"object\" :class=\"'object-' + index\"\r\n               :style=\"{ top: object.y + 'px', left: object.x + 'px' }\" :data-size=\"object.size\"\r\n               @click.stop=\"objectClicked(object.points)\"></div>\r\n         </div>\r\n      </div>\r\n      <p>Score: {{ score }}</p>\r\n   </div>\r\n</template>\r\n \r\n<script>\r\nexport default {\r\n   data() {\r\n      return {\r\n         objects: [\r\n            { points: -Math.floor(Math.random() * (50 - 5 + 1) + 5), size: 50, speed: 1000 },\r\n            { points: -Math.floor(Math.random() * (50 - 5 + 1) + 5), size: 50, speed: 1000 },\r\n            { points: -Math.floor(Math.random() * (50 - 5 + 1) + 5), size: 50, speed: 1000 },\r\n            { points: 5, size: 50, speed: 1000 },\r\n            { points: 5, size: 50, speed: 1000 },\r\n            { points: 5, size: 50, speed: 1000 },\r\n            { points: 10, size: 40, speed: 1000 },\r\n            { points: 10, size: 40, speed: 1000 },\r\n            { points: 15, size: 30, speed: 1000 },\r\n            { points: 15, size: 30, speed: 1000 },\r\n            { points: 20, size: 20, speed: 1000 },\r\n            { points: 30, size: 10, speed: 500 },\r\n         ],\r\n         score: 0,\r\n      };\r\n   },\r\n   mounted() {\r\n      this.moveObjects();\r\n   },\r\n   methods: {\r\n      moveObjects() {\r\n         this.objects.forEach((object, index) => {\r\n            setInterval(() => {\r\n               object.x = Math.floor(Math.random() * (600 - object.size));\r\n               object.y = Math.floor(Math.random() * (400 - object.size));\r\n            }, object.speed);\r\n         });\r\n      },\r\n      objectClicked(points) {\r\n         this.score += points;\r\n      },\r\n      missedClick() {\r\n         this.score -= 1;\r\n      },\r\n   },\r\n};\r\n</script>\r\n \r\n<style scoped>\r\n#game-board {\r\n   position: relative;\r\n   width: 600px;\r\n   height: 400px;\r\n   border: 1px solid black;\r\n}\r\n\r\n.object {\r\n   position: absolute;\r\n   background-color: red;\r\n   border-radius: 50%;\r\n}\r\n\r\n.object-0,\r\n.object-1,\r\n.object-2 {\r\n   background-color: purple;\r\n}\r\n\r\n.container {\r\n   display: flex;\r\n   align-items: center;\r\n   justify-content: center;\r\n   width: 100%;\r\n}\r\n</style>\r\n\r\n<style scoped>\r\n/* ... 기존 스타일 ... */\r\n.object {\r\n   position: absolute;\r\n   background-color: red;\r\n   border-radius: 50%;\r\n}\r\n\r\n.object-0,\r\n.object-1,\r\n.object-2 {\r\n   background-color: purple;\r\n}\r\n</style>\r\n\r\n<style>\r\n/* 동적으로 물체의 크기를 설정하기 위한 CSS */\r\n.object[data-size=\"50\"] {\r\n   width: 50px;\r\n   height: 50px;\r\n}\r\n\r\n.object[data-size=\"40\"] {\r\n   width: 40px;\r\n   height: 40px;\r\n}\r\n\r\n.object[data-size=\"30\"] {\r\n   width: 30px;\r\n   height: 30px;\r\n}\r\n\r\n.object[data-size=\"20\"] {\r\n   width: 20px;\r\n   height: 20px;\r\n}\r\n\r\n.object[data-size=\"10\"] {\r\n   width: 10px;\r\n   height: 10px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}