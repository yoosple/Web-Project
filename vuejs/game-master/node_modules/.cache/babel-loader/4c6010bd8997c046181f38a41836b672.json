{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"game\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.startGame && $options.startGame(...args))\n  }, \"Start Game\"), $data.gameStarted ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"p\", null, _toDisplayString($data.directionSequence), 1\n  /* TEXT */\n  ), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.userInput = $event),\n    onKeyup: _cache[2] || (_cache[2] = _withKeys((...args) => $options.checkInput && $options.checkInput(...args), [\"enter\"]))\n  }, null, 544\n  /* HYDRATE_EVENTS, NEED_PATCH */\n  ), [[_vModelText, $data.userInput]])])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"p\", null, _toDisplayString($data.message), 1\n  /* TEXT */\n  ), _createElementVNode(\"p\", null, \"Your score: \" + _toDisplayString($data.score), 1\n  /* TEXT */\n  )]);\n}","map":{"version":3,"mappings":";;AACQA,OAAK,EAAC;;;;;;uBAAXC,oBAQM,KARN,cAQM,CAPJC,oBAA8C,QAA9C,EAA8C;AAArCC,WAAK,yCAAEC,iDAAF;AAAgC,GAA9C,EAA2B,YAA3B,CAOI,EANOC,mCAAXJ,oBAGM,KAHN,EAGMK,UAHN,EAGM,CAFJJ,oBAA8B,GAA9B,EAA8B,IAA9B,EAA8BK,iBAAxBF,uBAAwB,CAA9B,EAAuB;AAAA;AAAvB,GAEI,kBADJH,oBAAkE,OAAlE,EAAkE;AAA3DM,QAAI,EAAC,MAAsD;+DAAtCH,kBAASI,OAA6B;AAA1BC,WAAK,mDAAQN,mDAAR,EAAkB,SAAlB;AAAqB,GAAlE;;AAAA,oBAA4BC,kBACxB,CAHN,sCAMI,EAFJH,oBAAoB,GAApB,EAAoB,IAApB,EAAoBK,iBAAdF,aAAc,CAApB,EAAa;AAAA;AAAb,GAEI,EADJH,oBAA8B,GAA9B,EAA8B,IAA9B,EAAG,iBAAYK,iBAAGF,WAAH,CAAf,EAAuB;AAAA;AAAvB,GACI,CARN","names":["class","_createElementBlock","_createElementVNode","onClick","$options","$data","_hoisted_2","_toDisplayString","type","$event","onKeyup"],"sourceRoot":"","sources":["C:\\Users\\kk\\Desktop\\Web\\Web-Project\\vuejs\\game-master\\src\\components\\menus\\DancePage.vue"],"sourcesContent":["<template>\r\n   <div class=\"game\">\r\n     <button @click=\"startGame\">Start Game</button>\r\n     <div v-if=\"gameStarted\">\r\n       <p>{{ directionSequence }}</p>\r\n       <input type=\"text\" v-model=\"userInput\" @keyup.enter=\"checkInput\"/>\r\n     </div>\r\n     <p>{{ message }}</p>\r\n     <p>Your score: {{ score }}</p>\r\n   </div>\r\n </template>\r\n \r\n <script>\r\n export default {\r\n   data() {\r\n     return {\r\n       directionSequence: [],\r\n       userInput: '',\r\n       gameStarted: false,\r\n       message: '',\r\n       score: 0\r\n     }\r\n   },\r\n   methods: {\r\n     startGame() {\r\n       this.gameStarted = true;\r\n       this.generateSequence();\r\n     },\r\n     generateSequence() {\r\n       const directions = ['Left', 'Up', 'Down', 'Right'];\r\n       for (let i = 0; i < 10; i++) {\r\n         this.directionSequence.push(directions[Math.floor(Math.random() * directions.length)]);\r\n       }\r\n     },\r\n     checkInput() {\r\n       if (this.userInput === this.directionSequence.join('')) {\r\n         this.score++;\r\n         this.message = 'Correct!';\r\n       } else {\r\n         this.message = 'Incorrect. Try again.';\r\n       }\r\n       this.userInput = '';\r\n       this.directionSequence = [];\r\n       this.generateSequence();\r\n     }\r\n   }\r\n }\r\n </script>"]},"metadata":{},"sourceType":"module"}