{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-6220f3f2\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"rhythm-game\"\n};\nconst _hoisted_2 = {\n  class: \"score\"\n};\nconst _hoisted_3 = {\n  class: \"game-area\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"chicken\",\n  disabled: \"\"\n}, \"üêî\", -1\n/* HOISTED */\n));\n\nconst _hoisted_5 = {\n  key: 0,\n  class: \"dance-animation\",\n  disabled: \"\"\n};\nconst _hoisted_6 = {\n  class: \"note-lanes\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, \"Ï†êÏàò: \" + _toDisplayString($data.score), 1\n  /* TEXT */\n  ), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.startGame && _ctx.startGame(...args)),\n    class: \"start-button\"\n  }, \"ÏãúÏûë\"), _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, $data.showDanceAnimation ? (_openBlock(), _createElementBlock(\"button\", _hoisted_5, \"üíÉ\")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.directionKeys, (key, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"note-lane\",\n      ref_for: true,\n      ref: \"noteLane\"\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(key.notes, (note, noteIndex) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        class: _normalizeClass([\"note\", {\n          hit: note.hit\n        }]),\n        key: noteIndex,\n        style: _normalizeStyle({\n          top: note.position + 'px'\n        })\n      }, null, 6\n      /* CLASS, STYLE */\n      );\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])])]);\n}","map":{"version":3,"mappings":";;;;;AACQA,OAAK,EAAC;;;AACHA,OAAK,EAAC;;;AAENA,OAAK,EAAC;;;gEACRC,oBAA4C,QAA5C,EAA4C;AAApCD,OAAK,EAAC,SAA8B;AAApBE,UAAQ,EAAR;AAAoB,CAA5C,EAAiC,IAAjC,EAAmC;AAAA;AAAnC;;;;AACQF,OAAK,EAAC;AAA4CE,UAAQ,EAAR;;;AACrDF,OAAK,EAAC;;;uBANjBG,oBAaM,KAbN,cAaM,CAZHF,oBAAwC,KAAxC,cAAmB,SAAIG,iBAAGC,WAAH,CAAvB,EAA+B;AAAA;AAA/B,GAYG,EAXHJ,oBAA2D,QAA3D,EAA2D;AAAlDK,WAAK,yCAAEC,yCAAF,CAA6C;AAAhCP,SAAK,EAAC;AAA0B,GAA3D,EAAgD,IAAhD,CAWG,EAVHC,oBASM,KATN,cASM,CARHO,UAQG,EAPmCH,0CAAtCF,oBAA8E,QAA9E,cAAmE,IAAnE,sCAOG,EANHF,oBAKM,KALN,cAKM,oBAJHE,oBAGMM,SAHN,EAGM,IAHN,EAGMC,YAHsBL,mBAGtB,EAHmC,CAA5BM,GAA4B,EAAvBC,KAAuB,KAAlB;yBAAvBT,oBAGM,KAHN,EAGM;AAHsCQ,SAAG,EAAEC,KAG3C;AAHkDZ,WAAK,EAAC,WAGxD;mBAAA;AAHoEa,SAAG,EAAC;AAGxE,KAHN,sBACGV,oBACgDM,SADhD,EACgD,IADhD,EACgDC,YADFC,GAAG,CAACG,KACF,EADO,CAA7BC,IAA6B,EAAvBC,SAAuB,KAAd;2BAAzCb,oBACgD,KADhD,EACgD;AAD3CH,aAAK,mBAAC,MAAD,EAAO;AAAAiB,eAAwEF,IAAI,CAACE;AAA7E,SAAP,EACsC;AADUN,WAAG,EAAEK,SACf;AAA5CE,aAAK;AAAAC,eAASJ,IAAI,CAACK,QAAL,GAAa;AAAtB;AAAuC,OADhD;;AAAA;KACgD,CADhD;;AAAA,OADH;GAGM,CAHN;;AAAA,GAIG,EALN,CAMG,CATN,CAUG,CAbN","names":["class","_createElementVNode","disabled","_createElementBlock","_toDisplayString","$data","onClick","_ctx","_hoisted_4","_Fragment","_renderList","key","index","ref","notes","note","noteIndex","hit","style","top","position"],"sourceRoot":"","sources":["C:\\Users\\kk\\Desktop\\Web\\Web-Project\\vuejs\\game-master\\src\\components\\menus\\DancePage.vue"],"sourcesContent":["<template>\r\n   <div class=\"rhythm-game\">\r\n      <div class=\"score\">Ï†êÏàò: {{ score }}</div>\r\n      <button @click=\"startGame\" class=\"start-button\">ÏãúÏûë</button>\r\n      <div class=\"game-area\">\r\n         <button class=\"chicken\" disabled>üêî</button>\r\n         <button class=\"dance-animation\" v-if=\"showDanceAnimation\" disabled>üíÉ</button>\r\n         <div class=\"note-lanes\">\r\n            <div v-for=\"(key, index) in directionKeys\" :key=\"index\" class=\"note-lane\" ref=\"noteLane\">\r\n               <div class=\"note\" v-for=\"(note, noteIndex) in key.notes\" :key=\"noteIndex\" :class=\"{ hit: note.hit }\"\r\n                  :style=\"{ top: note.position + 'px' }\"></div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   </div>\r\n</template>\r\n \r\n<script>\r\nimport { gsap } from 'gsap';\r\nimport { Howl } from 'howler';\r\n\r\nexport default {\r\n   data() {\r\n      return {\r\n         score: 0,\r\n         gameStarted: false,\r\n         showDanceAnimation: false,\r\n         directionKeys: [\r\n            { key: 'ArrowLeft', notes: [] },\r\n            { key: 'ArrowUp', notes: [] },\r\n            { key: 'ArrowDown', notes: [] },\r\n            { key: 'ArrowRight', notes: [] },\r\n         ],\r\n         hitPosition: 100,\r\n         song: new Howl({\r\n            src: ['path/to/your/song.mp3'],\r\n            onplay: this.onSongPlay,\r\n         }),\r\n      };\r\n   },\r\n   startGame() {\r\n    this.gameStarted = true;\r\n    window.addEventListener('keydown', this.handleKeydown);\r\n    this.song.play();\r\n   },\r\n   mounted() {\r\n   },\r\n   beforeUnmount() {\r\n      if (this.gameStarted) {\r\n         window.removeEventListener('keydown', this.handleKeydown);\r\n      }\r\n   },\r\n   methods: {\r\n      onSongPlay() {\r\n         const noteTimings = [\r\n            { timing: 1, direction: 'ArrowLeft' },\r\n            { timing: 2, direction: 'ArrowUp' },\r\n            { timing: 3, direction: 'ArrowDown' },\r\n            { timing: 4, direction: 'ArrowRight' },\r\n         ];\r\n\r\n         noteTimings.forEach((noteTiming) => {\r\n            const delay = noteTiming.timing - this.hitPosition / 1000;\r\n            const key = this.directionKeys.find((key) => key.key === noteTiming.direction);\r\n\r\n            key.notes.push({ position: 0, hit: false });\r\n\r\n            gsap.to(key.notes[key.notes.length - 1], {\r\n               position: this.hitPosition,\r\n               duration: delay,\r\n               onComplete: () => {\r\n                  if (!key.notes[0].hit) {\r\n                     key.notes.shift();\r\n                  }\r\n               },\r\n            });\r\n         });\r\n      },\r\n      handleKeydown(event) {\r\n         const key = this.directionKeys.find((key) => key.key === event.code);\r\n\r\n         if (key) {\r\n            const note = key.notes[0];\r\n\r\n            if (note && note.position >= this.hitPosition - 10 && note.position <= this.hitPosition + 10) {\r\n               note.hit = true;\r\n               this.score += 10;\r\n               this.showDanceAnimation = true;\r\n               setTimeout(() => {\r\n                  this.showDanceAnimation = false;\r\n               }, 500);\r\n            }\r\n         }\r\n      },\r\n   },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.rhythm-game {\r\n   display: flex;\r\n   flex-direction: column;\r\n   align-items: center;\r\n}\r\n\r\n.score {\r\n   margin-bottom: 20px;\r\n}\r\n\r\n.game-area {\r\n   position: relative;\r\n   display: flex;\r\n   justify-content: center;\r\n   align-items: center;\r\n}\r\n\r\n.chicken {\r\n   position: absolute;\r\n   font-size: 2rem;\r\n   border: none;\r\n   background: transparent;\r\n   cursor: default;\r\n}\r\n\r\n.dance-animation {\r\n   position: absolute;\r\n   font-size: 2rem;\r\n   border: none;\r\n   background: transparent;\r\n   cursor: default;\r\n}\r\n\r\n.note-lanes {\r\n   display: flex;\r\n}\r\n\r\n.note-lane {\r\n   position: relative;\r\n   width: 100px;\r\n   height: 300px;\r\n   border: 1px solid #000;\r\n}\r\n\r\n.note {\r\n   position: absolute;\r\n   width: 50px;\r\n   height: 50px;\r\n   background-color: #f00;\r\n   opacity: 1;\r\n   left: 25px;\r\n}\r\n\r\n.note.hit {\r\n   opacity: 0;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}