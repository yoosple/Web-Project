{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"min-h-screen pt-8 text-center dark:bg-gray-800 dark:text-white\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"mb-8 text-3xl font-bold uppercase\"\n}, \"Tic-Tac-Toe\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = {\n  class: \"mb-4 text-xl\"\n};\nconst _hoisted_4 = {\n  class: \"mb-8 flex flex-col items-center\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  class: \"text-center\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"mb-8 text-6xl font-bold\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"main\", _hoisted_1, [_hoisted_2, _createElementVNode(\"h3\", _hoisted_3, \"Player \" + _toDisplayString($setup.player) + \"'s turn\", 1\n  /* TEXT */\n  ), _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.board, (row, x) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: x,\n      class: \"flex\"\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(row, (cell, y) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: y,\n        onClick: $event => $setup.MakeMove(x, y),\n        class: _normalizeClass(`material-icons-outlined flex h-32 w-32 cursor-pointer items-center justify-center border border-white text-5xl hover:bg-gray-700 ${cell === 'X' ? 'text-pink-500' : 'text-blue-500'}`)\n      }, _toDisplayString(cell), 11\n      /* TEXT, CLASS, PROPS */\n      , _hoisted_5);\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _createElementVNode(\"div\", _hoisted_6, [$setup.winner ? (_openBlock(), _createElementBlock(\"h2\", _hoisted_7, \" Player '\" + _toDisplayString($setup.winner) + \"' wins! \", 1\n  /* TEXT */\n  )) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    onClick: $setup.ResetGame,\n    class: \"duration-400 rounded bg-red-500 px-4 py-2 font-bold uppercase hover:bg-red-600\"\n  }, \" Reset \")])]);\n}","map":{"version":3,"mappings":";;AACSA,OAAK,EAAC;;;gCACXC,oBAA8D,IAA9D,EAA8D;AAA1DD,OAAK,EAAC;AAAoD,CAA9D,EAA8C,aAA9C,EAAyD;AAAA;AAAzD;;;AAEIA,OAAK,EAAC;;;AAELA,OAAK,EAAC;;;;AAeNA,OAAK,EAAC;;;;AACSA,OAAK,EAAC;;;uBArB3BE,oBA+BM,MA/BN,cA+BM,CA9BLC,UA8BK,EA5BLF,oBAAwD,IAAxD,cAAyB,YAAOG,iBAAGC,aAAH,CAAP,GAAmB,SAA5C,EAAmD;AAAA;AAAnD,GA4BK,EA1BLJ,oBAaM,KAbN,cAaM,oBAZJC,oBAWMI,SAXN,EAWM,IAXN,EAWMC,YAXkBF,YAWlB,EAXuB,CAAhBG,GAAgB,EAAXC,CAAW,KAAV;yBAAnBP,oBAWM,KAXN,EAWM;AAX0BQ,SAAG,EAAED,CAW/B;AAXkCT,WAAK,EAAC;AAWxC,KAXN,sBACEE,oBASMI,SATN,EASM,IATN,EASMC,YARgBC,GAQhB,EARmB,CAAfG,IAAe,EAATC,CAAS,KAAR;2BADjBV,oBASM,KATN,EASM;AAPHQ,WAAG,EAAEE,CAOF;AANHC,eAAK,YAAER,gBAASI,CAAT,EAAYG,CAAZ,CAMJ;AALHZ,aAAK,sJAAoJW,IAAI,QAAJ,GAAI,eAAJ,GAAI,iBAAxJ;AAKF,OATN,mBAQKA,KARL,EAQS;AAAA;AART,QAQSG,UART;KASM,CATN;;AAAA,OADF;GAWM,CAXN;;AAAA,GAYI,EAbN,CA0BK,EAXLb,oBAUM,KAVN,cAUM,CATMI,+BAAVH,oBAEK,IAFL,cAAkD,cACxCE,iBAAGC,aAAH,CADwC,GAC5B,UADtB,EAEA;AAAA;AAFA,wCASI,EANJJ,oBAKS,QALT,EAKS;AAJNY,WAAK,EAAER,gBAID;AAHPL,SAAK,EAAC;AAGC,GALT,EAGC,SAHD,CAMI,CAVN,CAWK,CA/BN","names":["class","_createElementVNode","_createElementBlock","_hoisted_2","_toDisplayString","$setup","_Fragment","_renderList","row","x","key","cell","y","onClick","_hoisted_5"],"sourceRoot":"","sources":["C:\\Users\\kk\\Desktop\\Web\\game-master\\src\\components\\menus\\DashboadPage.vue"],"sourcesContent":["<template>\r\n   <main class=\"min-h-screen pt-8 text-center dark:bg-gray-800 dark:text-white\">\r\n    <h1 class=\"mb-8 text-3xl font-bold uppercase\">Tic-Tac-Toe</h1>\r\n\r\n    <h3 class=\"mb-4 text-xl\">Player {{ player }}'s turn</h3>\r\n\r\n    <div class=\"mb-8 flex flex-col items-center\">\r\n      <div v-for=\"(row, x) in board\" :key=\"x\" class=\"flex\">\r\n        <div\r\n          v-for=\"(cell, y) in row\"\r\n          :key=\"y\"\r\n          @click=\"MakeMove(x, y)\"\r\n          :class=\"`material-icons-outlined flex h-32 w-32 cursor-pointer items-center justify-center border border-white text-5xl hover:bg-gray-700 ${\r\n            cell === 'X' ? 'text-pink-500' : 'text-blue-500'\r\n          }`\"\r\n        >\r\n          {{ cell }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"text-center\">\r\n      <h2 v-if=\"winner\" class=\"mb-8 text-6xl font-bold\">\r\n        Player '{{ winner }}' wins!\r\n      </h2>\r\n      <button\r\n        @click=\"ResetGame\"\r\n        class=\"duration-400 rounded bg-red-500 px-4 py-2 font-bold uppercase hover:bg-red-600\"\r\n      >\r\n        Reset\r\n      </button>\r\n    </div>\r\n  </main>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed } from \"vue\";\r\nconst player = ref(\"X\");\r\nconst board = ref([\r\n  [\"\", \"\", \"\"],\r\n  [\"\", \"\", \"\"],\r\n  [\"\", \"\", \"\"],\r\n]);\r\nconst CalculateWinner = (squares) => {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n};\r\nconst winner = computed(() => CalculateWinner(board.value.flat()));\r\nconst MakeMove = (x, y) => {\r\n  if (winner.value || board.value[x][y] !== \"\") return;\r\n  board.value[x][y] = player.value;\r\n  player.value = player.value === \"X\" ? \"O\" : \"X\";\r\n};\r\nconst ResetGame = () => {\r\n  board.value = [\r\n    [\"\", \"\", \"\"],\r\n    [\"\", \"\", \"\"],\r\n    [\"\", \"\", \"\"],\r\n  ];\r\n  player.value = \"X\";\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module"}