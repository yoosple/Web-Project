{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from './assets/chicken.png';\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-6220f3f2\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"rhythm-game\"\n};\nconst _hoisted_2 = {\n  class: \"score\"\n};\nconst _hoisted_3 = {\n  class: \"game-area\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  alt: \"chicken\",\n  class: \"chicken\"\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_5 = {\n  class: \"note-lanes\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, \"점수: \" + _toDisplayString($data.score), 1\n  /* TEXT */\n  ), _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, $data.showDanceAnimation ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"dance-animation\",\n    style: _normalizeStyle({\n      backgroundImage: `url('./assets/dance-animation.png')`\n    })\n  }, null, 4\n  /* STYLE */\n  )) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.directionKeys, (key, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"note-lane\",\n      ref_for: true,\n      ref: \"noteLane\"\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(key.notes, (note, noteIndex) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        class: _normalizeClass([\"note\", {\n          hit: note.hit\n        }]),\n        key: noteIndex,\n        style: _normalizeStyle({\n          top: note.position + 'px'\n        })\n      }, null, 6\n      /* CLASS, STYLE */\n      );\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])])]);\n}","map":{"version":3,"mappings":";OAIcA,gBAA0B;;;;;AAHhCC,OAAK,EAAC;;;AACHA,OAAK,EAAC;;;AACNA,OAAK,EAAC;;;gEACRC,oBAAgE,KAAhE,EAAgE;AAA3DC,KAA0B,EAA1BH,UAA2D;AAAhCI,KAAG,EAAC,SAA4B;AAAlBH,OAAK,EAAC;AAAY,CAAhE;;AAAA;;;AAGKA,OAAK,EAAC;;;uBANjBI,oBAaM,KAbN,cAaM,CAZHH,oBAAwC,KAAxC,cAAmB,SAAII,iBAAGC,WAAH,CAAvB,EAA+B;AAAA;AAA/B,GAYG,EAXHL,oBAUM,KAVN,cAUM,CATHM,UASG,EARgCD,0CAAnCF,oBAC6E,KAD7E,EAC6E;UAAA;AADxEJ,SAAK,EAAC,iBACkE;AAAzEQ,SAAK,kBAAE;AAAAC;AAAA,KAAF;AAAoE,GAD7E;;AAAA,wCAQG,EANHR,oBAKM,KALN,cAKM,oBAJHG,oBAGMM,SAHN,EAGM,IAHN,EAGMC,YAHsBL,mBAGtB,EAHmC,CAA5BM,GAA4B,EAAvBC,KAAuB,KAAlB;yBAAvBT,oBAGM,KAHN,EAGM;AAHsCQ,SAAG,EAAEC,KAG3C;AAHkDb,WAAK,EAAC,WAGxD;mBAAA;AAHoEc,SAAG,EAAC;AAGxE,KAHN,sBACGV,oBACgDM,SADhD,EACgD,IADhD,EACgDC,YADFC,GAAG,CAACG,KACF,EADO,CAA7BC,IAA6B,EAAvBC,SAAuB,KAAd;2BAAzCb,oBACgD,KADhD,EACgD;AAD3CJ,aAAK,mBAAC,MAAD,EAAO;AAAAkB,eAAwEF,IAAI,CAACE;AAA7E,SAAP,EACsC;AADUN,WAAG,EAAEK,SACf;AAA5CT,aAAK;AAAAW,eAASH,IAAI,CAACI,QAAL,GAAa;AAAtB;AAAuC,OADhD;;AAAA;KACgD,CADhD;;AAAA,OADH;GAGM,CAHN;;AAAA,GAIG,EALN,CAMG,CAVN,CAWG,CAbN","names":["_imports_0","class","_createElementVNode","src","alt","_createElementBlock","_toDisplayString","$data","_hoisted_4","style","backgroundImage","_Fragment","_renderList","key","index","ref","notes","note","noteIndex","hit","top","position"],"sourceRoot":"","sources":["C:\\Users\\kk\\Desktop\\Web\\Web-Project\\vuejs\\game-master\\src\\components\\menus\\DancePage.vue"],"sourcesContent":["<template>\r\n   <div class=\"rhythm-game\">\r\n      <div class=\"score\">점수: {{ score }}</div>\r\n      <div class=\"game-area\">\r\n         <img src=\"./assets/chicken.png\" alt=\"chicken\" class=\"chicken\" />\r\n         <div class=\"dance-animation\" v-if=\"showDanceAnimation\"\r\n            :style=\"{ backgroundImage: `url('./assets/dance-animation.png')` }\"></div>\r\n         <div class=\"note-lanes\">\r\n            <div v-for=\"(key, index) in directionKeys\" :key=\"index\" class=\"note-lane\" ref=\"noteLane\">\r\n               <div class=\"note\" v-for=\"(note, noteIndex) in key.notes\" :key=\"noteIndex\" :class=\"{ hit: note.hit }\"\r\n                  :style=\"{ top: note.position + 'px' }\"></div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   </div>\r\n</template>\r\n \r\n<script>\r\nimport { gsap } from 'gsap';\r\nimport { Howl } from 'howler';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      score: 0,\r\n      directionKeys: [\r\n        { key: 'ArrowLeft', notes: [] },\r\n        { key: 'ArrowUp', notes: [] },\r\n        { key: 'ArrowDown', notes: [] },\r\n        { key: 'ArrowRight', notes: [] },\r\n      ],\r\n      hitPosition: 100,\r\n      song: new Howl({\r\n        src: ['path/to/your/song.mp3'],\r\n        onplay: this.onSongPlay,\r\n      }),\r\n      showDanceAnimation: false,\r\n    };\r\n  },\r\n  mounted() {\r\n    window.addEventListener('keydown', this.handleKeydown);\r\n    this.song.play();\r\n  },\r\n  beforeUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeydown);\r\n  },\r\n  methods: {\r\n    onSongPlay() {\r\n      // Add your note timings and directions here\r\n      const noteTimings = [\r\n        { timing: 1, direction: 'ArrowLeft' },\r\n        { timing: 2, direction: 'ArrowUp' },\r\n        { timing: 3, direction: 'ArrowDown' },\r\n        { timing: 4, direction: 'ArrowRight' },\r\n      ];\r\n\r\n      noteTimings.forEach((noteTiming) => {\r\n        const delay = noteTiming.timing - this.hitPosition / 1000;\r\n        const key = this.directionKeys.find((key) => key.key === noteTiming.direction);\r\n\r\n        key.notes.push({ position: 0, hit: false });\r\n\r\n        gsap.to(key.notes[key.notes.length - 1], {\r\n          position: this.hitPosition,\r\n          duration: delay,\r\n          onComplete: () => {\r\n            if (!key.notes[0].hit) {\r\n              key.notes.shift();\r\n            }\r\n          },\r\n        });\r\n      });\r\n    },\r\n    handleKeydown(event) {\r\n  const key = this.directionKeys.find((key) => key.key === event.code);\r\n\r\n  if (key) {\r\n    const note = key.notes[0];\r\n\r\n    if (note && note.position >= this.hitPosition - 10 && note.position <= this.hitPosition + 10) {\r\n      note.hit = true;\r\n      this.score += 10;\r\n      this.showDanceAnimation = true;\r\n      setTimeout(() => {\r\n        this.showDanceAnimation = false;\r\n      }, 500);\r\n    }\r\n  }\r\n},\r\n  },\r\n};\r\n </script>\r\n \r\n <style scoped>\r\n .rhythm-game {\r\n   display: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\n}\r\n\r\n.score {\r\nmargin-bottom: 20px;\r\n}\r\n\r\n.note-lanes {\r\ndisplay: flex;\r\n}\r\n\r\n.note-lane {\r\nposition: relative;\r\nwidth: 100px;\r\nheight: 300px;\r\nborder: 1px solid #000;\r\n}\r\n\r\n.note {\r\nposition: absolute;\r\nwidth: 50px;\r\nheight: 50px;\r\nbackground-color: #f00;\r\nopacity: 1;\r\nleft: 25px;\r\n}\r\n\r\n.note.hit {\r\nopacity: 0;\r\n}\r\n\r\n.game-area {\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.chicken {\r\n  position: absolute;\r\n  width: 100px;\r\n  height: 100px;\r\n}\r\n\r\n.dance-animation {\r\n  position: absolute;\r\n  width: 100px;\r\n  height: 100px;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n}\r\n </style>"]},"metadata":{},"sourceType":"module"}