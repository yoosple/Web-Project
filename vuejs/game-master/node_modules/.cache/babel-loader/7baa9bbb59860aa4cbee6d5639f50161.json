{"ast":null,"code":"export default {\n  data() {\n    return {\n      boardWidth: 800,\n      boardHeight: 600,\n      objects: [],\n      score: 0,\n      isGameCleared: false,\n      remainingTime: 30,\n      isGameOver: false,\n      isGameStarted: false\n    };\n  },\n\n  mounted() {},\n\n  methods: {\n    initGame() {\n      const trapObjects = Array(3).fill().map(() => ({\n        size: 50,\n        speed: 2000,\n        color: \"red\",\n        score: Math.floor(Math.random() * 46) * -1 - 5,\n        visible: true\n      }));\n      const positiveObjects = [{\n        size: 50,\n        speed: 2000,\n        color: \"green\",\n        score: 5,\n        visible: true\n      }, {\n        size: 50,\n        speed: 2000,\n        color: \"green\",\n        score: 5,\n        visible: true\n      }, {\n        size: 50,\n        speed: 2000,\n        color: \"green\",\n        score: 5,\n        visible: true\n      }, {\n        size: 40,\n        speed: 1800,\n        color: \"blue\",\n        score: 10,\n        visible: true\n      }, {\n        size: 40,\n        speed: 1800,\n        color: \"blue\",\n        score: 10,\n        visible: true\n      }, {\n        size: 30,\n        speed: 1600,\n        color: \"yellow\",\n        score: 15,\n        visible: true\n      }, {\n        size: 30,\n        speed: 1600,\n        color: \"yellow\",\n        score: 15,\n        visible: true\n      }, {\n        size: 20,\n        speed: 1400,\n        color: \"purple\",\n        score: 20,\n        visible: true\n      }, {\n        size: 10,\n        speed: 1000,\n        color: \"orange\",\n        score: 30,\n        visible: true\n      }];\n      this.objects = [...trapObjects, ...positiveObjects];\n    },\n\n    moveObject(object) {\n      object.x = Math.floor(Math.random() * (this.boardWidth - object.size));\n      object.y = Math.floor(Math.random() * (this.boardHeight - object.size));\n\n      if (!this.isGameCleared && !this.isGameOver) {\n        setTimeout(() => {\n          this.moveObject(object);\n        }, object.speed);\n      }\n    },\n\n    moveObjects() {\n      for (const object of this.objects) {\n        this.moveObject(object);\n      }\n    },\n\n    handleClick(object) {\n      this.score += object.score;\n      object.visible = false;\n      const positiveObjectsVisible = this.objects.filter(obj => obj.score > 0 && obj.visible);\n      const allObjectsVisible = this.objects.filter(obj => obj.visible);\n\n      if (positiveObjectsVisible.length === 0 || allObjectsVisible.length === 0) {\n        this.isGameCleared = true;\n      }\n    },\n\n    missClick() {\n      this.score -= 1;\n    },\n\n    startTimer() {\n      const countdown = setInterval(() => {\n        this.remainingTime--;\n\n        if (this.remainingTime <= 0) {\n          clearInterval(countdown);\n          this.isGameOver = true;\n          this.isGameCleared = false;\n        }\n      }, 1000);\n    },\n\n    startGame() {\n      this.isGameStarted = true;\n      this.isGameOver = false;\n      this.isGameCleared = false;\n      this.remainingTime = 30;\n      this.initGame();\n      this.moveObjects();\n      this.startTimer();\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["data","boardWidth","boardHeight","objects","score","isGameCleared","remainingTime","isGameOver","isGameStarted","mounted","methods","initGame","trapObjects","Array","fill","map","size","speed","color","Math","floor","random","visible","positiveObjects","moveObject","object","x","y","setTimeout","moveObjects","handleClick","positiveObjectsVisible","filter","obj","allObjectsVisible","length","missClick","startTimer","countdown","setInterval","clearInterval","startGame"],"sourceRoot":"","sources":["C:\\Users\\kk\\Desktop\\Web\\Web-Project\\vuejs\\game-master\\src\\components\\menus\\EaglePage.vue"],"sourcesContent":["<template>\r\n   <div>\r\n      <h1>움직이는 공 맞추기</h1>\r\n      <div class=\"game-board\" @click=\"missClick\">\r\n         <button v-if=\"!isGameStarted\" @click=\"startGame\" class=\"start-button\">Start</button>\r\n         <div v-for=\"(object, index) in objects\" :key=\"index\" class=\"game-object\" :style=\"{\r\n            width: object.size + 'px',\r\n            height: object.size + 'px',\r\n            top: object.y + 'px',\r\n            left: object.x + 'px',\r\n            backgroundColor: object.color,\r\n            display: object.visible ? 'block' : 'none'\r\n         }\" @click.stop=\"handleClick(object)\"></div>\r\n         <div class=\"score-board\">Score: {{ score }}</div>\r\n         <div class=\"timer\">Time: {{ remainingTime }}</div>\r\n         <div v-if=\"isGameCleared || isGameOver\" class=\"overlay\"></div>\r\n         <div v-if=\"isGameCleared\" class=\"game-cleared\">Game Cleared!</div>\r\n         <div v-if=\"isGameOver\" class=\"game-over\">Game Over!</div>\r\n      </div>\r\n   </div>\r\n</template>\r\n \r\n<script>\r\nexport default {\r\n   data() {\r\n      return {\r\n         boardWidth: 800,\r\n         boardHeight: 600,\r\n         objects: [],\r\n         score: 0,\r\n         isGameCleared: false,\r\n         remainingTime: 30,\r\n         isGameOver: false,\r\n         isGameStarted: false\r\n      };\r\n   },\r\n   mounted() {\r\n   },\r\n   methods: {\r\n      initGame() {\r\n         const trapObjects = Array(3)\r\n            .fill()\r\n            .map(() => ({\r\n               size: 50,\r\n               speed: 2000,\r\n               color: \"red\",\r\n               score: Math.floor(Math.random() * 46) * -1 - 5,\r\n               visible: true\r\n            }));\r\n\r\n         const positiveObjects = [\r\n            { size: 50, speed: 2000, color: \"green\", score: 5, visible: true },\r\n            { size: 50, speed: 2000, color: \"green\", score: 5, visible: true },\r\n            { size: 50, speed: 2000, color: \"green\", score: 5, visible: true },\r\n            { size: 40, speed: 1800, color: \"blue\", score: 10, visible: true },\r\n            { size: 40, speed: 1800, color: \"blue\", score: 10, visible: true },\r\n            { size: 30, speed: 1600, color: \"yellow\", score: 15, visible: true },\r\n            { size: 30, speed: 1600, color: \"yellow\", score: 15, visible: true },\r\n            { size: 20, speed: 1400, color: \"purple\", score: 20, visible: true },\r\n            { size: 10, speed: 1000, color: \"orange\", score: 30, visible: true }\r\n         ];\r\n\r\n         this.objects = [...trapObjects, ...positiveObjects];\r\n      },\r\n      moveObject(object) {\r\n         object.x = Math.floor(Math.random() * (this.boardWidth - object.size));\r\n         object.y = Math.floor(Math.random() * (this.boardHeight - object.size));\r\n\r\n         if (!this.isGameCleared && !this.isGameOver) {\r\n            setTimeout(() => {\r\n               this.moveObject(object);\r\n            }, object.speed);\r\n         }\r\n      },\r\n      moveObjects() {\r\n         for (const object of this.objects) {\r\n            this.moveObject(object);\r\n         }\r\n      },\r\n      handleClick(object) {\r\n         this.score += object.score;\r\n         object.visible = false;\r\n\r\n         const positiveObjectsVisible = this.objects.filter(\r\n            (obj) => obj.score > 0 && obj.visible\r\n         );\r\n         const allObjectsVisible = this.objects.filter((obj) => obj.visible);\r\n\r\n         if (positiveObjectsVisible.length === 0 || allObjectsVisible.length === 0) {\r\n            this.isGameCleared = true;\r\n         }\r\n      },\r\n      missClick() {\r\n         this.score -= 1;\r\n      },\r\n      startTimer() {\r\n         const countdown = setInterval(() => {\r\n            this.remainingTime--;\r\n\r\n            if (this.remainingTime <= 0) {\r\n               clearInterval(countdown);\r\n               this.isGameOver = true;\r\n               this.isGameCleared = false;\r\n            }\r\n         }, 1000);\r\n      }, startGame() {\r\n         this.isGameStarted = true;\r\n         this.isGameOver = false;\r\n         this.isGameCleared = false;\r\n         this.remainingTime = 30;\r\n         this.initGame();\r\n         this.moveObjects();\r\n         this.startTimer();\r\n      }\r\n   }\r\n};\r\n</script>\r\n \r\n<style scoped>\r\n.game-board {\r\n   position: relative;\r\n   width: 800px;\r\n   height: 600px;\r\n   border: 1px solid black;\r\n   margin: 0 auto;\r\n}\r\n\r\n.game-object {\r\n   position: absolute;\r\n   border-radius: 50%;\r\n}\r\n\r\n.score-board {\r\n   position: absolute;\r\n   top: 10px;\r\n   left: 10px;\r\n   font-size: 24px;\r\n}\r\n\r\n.game-cleared,\r\n.game-over {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  font-size: 36px;\r\n  z-index: 30;\r\n  background-color: aliceblue;\r\n}\r\n\r\n.timer {\r\n   position: absolute;\r\n   top: 10px;\r\n   right: 10px;\r\n   font-size: 24px;\r\n}\r\n\r\n.start-button {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  font-size: 24px;\r\n  z-index: 10;\r\n}\r\n\r\n.overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  z-index: 20;\r\n}\r\n</style>\r\n\r\n<style>\r\n/* 동적으로 물체의 크기를 설정하기 위한 CSS */\r\n.object[data-size=\"50\"] {\r\n   width: 50px;\r\n   height: 50px;\r\n}\r\n\r\n.object[data-size=\"40\"] {\r\n   width: 40px;\r\n   height: 40px;\r\n}\r\n\r\n.object[data-size=\"30\"] {\r\n   width: 30px;\r\n   height: 30px;\r\n}\r\n\r\n.object[data-size=\"20\"] {\r\n   width: 20px;\r\n   height: 20px;\r\n}\r\n\r\n.object[data-size=\"10\"] {\r\n   width: 10px;\r\n   height: 10px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}