{"ast":null,"code":"import { ref, computed } from \"vue\";\nexport default {\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const player = ref(\"X\");\n    const board = ref([[\"\", \"\", \"\"], [\"\", \"\", \"\"], [\"\", \"\", \"\"]]);\n\n    const CalculateWinner = squares => {\n      const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n      for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n          return squares[a];\n        }\n      }\n\n      return null;\n    };\n\n    const winner = computed(() => CalculateWinner(board.value.flat()));\n\n    const MakeMove = (x, y) => {\n      if (winner.value || board.value[x][y] !== \"\") return;\n      board.value[x][y] = player.value;\n      player.value = player.value === \"X\" ? \"O\" : \"X\";\n    };\n\n    const ResetGame = () => {\n      board.value = [[\"\", \"\", \"\"], [\"\", \"\", \"\"], [\"\", \"\", \"\"]];\n      player.value = \"X\";\n    };\n\n    const __returned__ = {\n      player,\n      board,\n      CalculateWinner,\n      winner,\n      MakeMove,\n      ResetGame,\n      ref,\n      computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"AAKA,SAASA,GAAT,EAAcC,QAAd,QAA8B,KAA9B;;;;;;AACA,UAAMC,MAAM,GAAGF,GAAG,CAAC,GAAD,CAAlB;AACA,UAAMG,KAAK,GAAGH,GAAG,CAAC,CAChB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CADgB,EAEhB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAFgB,EAGhB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAHgB,CAAD,CAAjB;;AAKA,UAAMI,eAAe,GAAIC,OAAD,IAAa;AACnC,YAAMC,KAAK,GAAG,CACZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADY,EAEZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFY,EAGZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHY,EAIZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJY,EAKZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALY,EAMZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANY,EAOZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPY,EAQZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARY,CAAd;;AAUA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,cAAM,CAACE,CAAD,EAAIC,CAAJ,EAAOC,CAAP,IAAYL,KAAK,CAACC,CAAD,CAAvB;;AACA,YAAIF,OAAO,CAACI,CAAD,CAAP,IAAcJ,OAAO,CAACI,CAAD,CAAP,KAAeJ,OAAO,CAACK,CAAD,CAApC,IAA2CL,OAAO,CAACI,CAAD,CAAP,KAAeJ,OAAO,CAACM,CAAD,CAArE,EAA0E;AACxE,iBAAON,OAAO,CAACI,CAAD,CAAd;AACD;AACF;;AACD,aAAO,IAAP;AACD,KAlBD;;AAmBA,UAAMG,MAAM,GAAGX,QAAQ,CAAC,MAAMG,eAAe,CAACD,KAAK,CAACU,KAAN,CAAYC,IAAZ,EAAD,CAAtB,CAAvB;;AACA,UAAMC,QAAQ,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACzB,UAAIL,MAAM,CAACC,KAAP,IAAgBV,KAAK,CAACU,KAAN,CAAYG,CAAZ,EAAeC,CAAf,MAAsB,EAA1C,EAA8C;AAC9Cd,WAAK,CAACU,KAAN,CAAYG,CAAZ,EAAeC,CAAf,IAAoBf,MAAM,CAACW,KAA3B;AACAX,YAAM,CAACW,KAAP,GAAeX,MAAM,CAACW,KAAP,KAAiB,GAAjB,GAAuB,GAAvB,GAA6B,GAA5C;AACD,KAJD;;AAKA,UAAMK,SAAS,GAAG,MAAM;AACtBf,WAAK,CAACU,KAAN,GAAc,CACZ,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CADY,EAEZ,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAFY,EAGZ,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAHY,CAAd;AAKAX,YAAM,CAACW,KAAP,GAAe,GAAf;AACD,KAPD","names":["ref","computed","player","board","CalculateWinner","squares","lines","i","length","a","b","c","winner","value","flat","MakeMove","x","y","ResetGame"],"sources":["C:/Users/kk/Desktop/Web/game-master/src/components/menus/DashboadPage.vue"],"sourcesContent":["<template>\r\n   <p>You chose <b>대시보드</b></p>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed } from \"vue\";\r\nconst player = ref(\"X\");\r\nconst board = ref([\r\n  [\"\", \"\", \"\"],\r\n  [\"\", \"\", \"\"],\r\n  [\"\", \"\", \"\"],\r\n]);\r\nconst CalculateWinner = (squares) => {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n};\r\nconst winner = computed(() => CalculateWinner(board.value.flat()));\r\nconst MakeMove = (x, y) => {\r\n  if (winner.value || board.value[x][y] !== \"\") return;\r\n  board.value[x][y] = player.value;\r\n  player.value = player.value === \"X\" ? \"O\" : \"X\";\r\n};\r\nconst ResetGame = () => {\r\n  board.value = [\r\n    [\"\", \"\", \"\"],\r\n    [\"\", \"\", \"\"],\r\n    [\"\", \"\", \"\"],\r\n  ];\r\n  player.value = \"X\";\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module"}