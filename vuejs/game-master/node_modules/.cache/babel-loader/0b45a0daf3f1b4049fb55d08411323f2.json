{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, withModifiers as _withModifiers, vShow as _vShow, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, withDirectives as _withDirectives, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-41c6a358\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"움직이는 공 맞추기\", -1\n/* HOISTED */\n));\n\nconst _hoisted_2 = {\n  class: \"container\"\n};\nconst _hoisted_3 = [\"data-size\", \"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", {\n    id: \"game-board\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.missedClick && $options.missedClick(...args))\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.objects, (object, index) => {\n    return _withDirectives((_openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass([\"object\", 'object-' + index]),\n      style: _normalizeStyle({\n        top: object.y + 'px',\n        left: object.x + 'px'\n      }),\n      \"data-size\": object.size,\n      onClick: _withModifiers($event => $options.objectClicked(object.points, object), [\"stop\"])\n    }, null, 14\n    /* CLASS, STYLE, PROPS */\n    , _hoisted_3)), [[_vShow, object.visible]]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])]), _createElementVNode(\"p\", null, \"Score: \" + _toDisplayString($data.score), 1\n  /* TEXT */\n  )]);\n}","map":{"version":3,"mappings":";;;;gEAEMA,oBAAmB,IAAnB,EAAmB,IAAnB,EAAI,YAAJ,EAAc;AAAA;AAAd;;;AACKC,OAAK,EAAC;;;;uBAFdC,oBAUM,KAVN,EAUM,IAVN,EAUM,CATHC,UASG,EARHH,oBAMM,KANN,cAMM,CALHA,oBAIM,KAJN,EAIM;AAJDI,MAAE,EAAC,YAIF;AAJgBC,WAAK,yCAAEC,qDAAF;AAIrB,GAJN,sBACGJ,oBAEoFK,SAFpF,EAEoF,IAFpF,EAEoFC,YAFrDC,aAEqD,EAF9C,CAAzBC,MAAyB,EAAjBC,KAAiB,KAAZ;0CAA1BT,oBAEoF,KAFpF,EAEoF;AAF3CU,SAAG,EAAED,KAEsC;AAF/BV,WAAK,mBAAC,QAAD,EAAS,YAAqBU,KAA9B,EAE0B;AADhFE,WAAK;AAAAC,aAASJ,MAAM,CAACK,CAAP,GAAQ,IAAjB;AAAiBC,cAAeN,MAAM,CAACO,CAAP,GAAQ;AAAxC,QAC2E;AADvB,mBAAWP,MAAM,CAACQ,IACK;AAAhFb,aAAK,2BAAOC,uBAAcI,MAAM,CAACS,MAArB,EAA6BT,MAA7B,CAAP,EAA0C,QAA1C;AAA2E,KAFpF;;AAAA,8BAE8DA,MAAM,CAACU;GAAe,CAFpF;;AAAA,KADH,CAKG,CANN,CAQG,EADHpB,oBAAyB,GAAzB,EAAyB,IAAzB,EAAG,YAAOqB,iBAAGZ,WAAH,CAAV,EAAkB;AAAA;AAAlB,GACG,CAVN","names":["_createElementVNode","class","_createElementBlock","_hoisted_1","id","onClick","$options","_Fragment","_renderList","$data","object","index","key","style","top","y","left","x","size","points","visible","_toDisplayString"],"sourceRoot":"","sources":["C:\\Users\\kk\\Desktop\\Web\\Web-Project\\vuejs\\game-master\\src\\components\\menus\\EaglePage.vue"],"sourcesContent":["<template>\r\n   <div>\r\n      <h1>움직이는 공 맞추기</h1>\r\n      <div class=\"container\">\r\n         <div id=\"game-board\" @click=\"missedClick\">\r\n            <div v-for=\"(object, index) in objects\" :key=\"index\" class=\"object\" :class=\"'object-' + index\"\r\n               :style=\"{ top: object.y + 'px', left: object.x + 'px' }\" :data-size=\"object.size\"\r\n               @click.stop=\"objectClicked(object.points, object)\" v-show=\"object.visible\"></div>\r\n         </div>\r\n      </div>\r\n      <p>Score: {{ score }}</p>\r\n   </div>\r\n</template>\r\n \r\n<script>\r\nexport default {\r\n   data() {\r\n      return {\r\n         objects: [\r\n            { points: -Math.floor(Math.random() * (50 - 5 + 1) + 5), size: 50, speed: 4000, visible: true },\r\n            { points: -Math.floor(Math.random() * (50 - 5 + 1) + 5), size: 50, speed: 4000, visible: true },\r\n            { points: -Math.floor(Math.random() * (50 - 5 + 1) + 5), size: 50, speed: 4000, visible: true },\r\n            { points: 5, size: 50, speed: 4000, visible: true },\r\n            { points: 5, size: 50, speed: 4000, visible: true },\r\n            { points: 5, size: 50, speed: 4000, visible: true },\r\n            { points: 10, size: 40, speed: 3000, visible: true },\r\n            { points: 10, size: 40, speed: 3000, visible: true },\r\n            { points: 15, size: 30, speed: 2000, visible: true },\r\n            { points: 15, size: 30, speed: 2000, visible: true },\r\n            { points: 20, size: 20, speed: 1000, visible: true },\r\n            { points: 30, size: 10, speed: 500, visible: true },\r\n         ],\r\n         score: 0,\r\n         gameCleared: false,\r\n      };\r\n   },\r\n   mounted() {\r\n      this.moveObjects();\r\n   },\r\n   methods: {\r\n      moveObjects() {\r\n         this.objects.forEach((object, index) => {\r\n            setInterval(() => {\r\n               object.x = Math.floor(Math.random() * (600 - object.size));\r\n               object.y = Math.floor(Math.random() * (400 - object.size));\r\n            }, object.speed);\r\n         });\r\n      },\r\n      objectClicked(points, object) {\r\n         this.score += points;\r\n         object.visible = false;\r\n\r\n         if (points > 0) {\r\n            this.positiveObjectsLeft -= 1;\r\n            if (this.positiveObjectsLeft === 0) {\r\n            this.gameCleared = true;\r\n            }\r\n         }\r\n      },\r\n      missedClick() {\r\n         this.score -= 1;\r\n      },\r\n   },\r\n};\r\n</script>\r\n \r\n<style scoped>\r\n#game-board {\r\n   position: relative;\r\n   width: 600px;\r\n   height: 400px;\r\n   border: 1px solid black;\r\n}\r\n\r\n.object {\r\n   position: absolute;\r\n   background-color: red;\r\n   border-radius: 50%;\r\n}\r\n\r\n.object-0,\r\n.object-1,\r\n.object-2 {\r\n   background-color: purple;\r\n}\r\n\r\n.container {\r\n   display: flex;\r\n   align-items: center;\r\n   justify-content: center;\r\n   width: 100%;\r\n}\r\n</style>\r\n\r\n<style scoped>\r\n/* ... 기존 스타일 ... */\r\n.object {\r\n   position: absolute;\r\n   background-color: red;\r\n   border-radius: 50%;\r\n}\r\n\r\n.object-0,\r\n.object-1,\r\n.object-2 {\r\n   background-color: purple;\r\n}\r\n</style>\r\n\r\n<style>\r\n/* 동적으로 물체의 크기를 설정하기 위한 CSS */\r\n.object[data-size=\"50\"] {\r\n   width: 50px;\r\n   height: 50px;\r\n}\r\n\r\n.object[data-size=\"40\"] {\r\n   width: 40px;\r\n   height: 40px;\r\n}\r\n\r\n.object[data-size=\"30\"] {\r\n   width: 30px;\r\n   height: 30px;\r\n}\r\n\r\n.object[data-size=\"20\"] {\r\n   width: 20px;\r\n   height: 20px;\r\n}\r\n\r\n.object[data-size=\"10\"] {\r\n   width: 10px;\r\n   height: 10px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}