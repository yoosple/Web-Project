{"ast":null,"code":"export default {\n  data() {\n    return {\n      canvas: null,\n      ctx: null,\n      width: 0,\n      height: 0,\n      basket: {\n        x: 0,\n        y: 0,\n        width: 100,\n        height: 20\n      },\n      objects: [],\n      score: 0,\n      isMovingLeft: false,\n      isMovingRight: false\n    };\n  },\n\n  mounted() {\n    this.canvas = this.$refs.canvas;\n    this.ctx = this.canvas.getContext('2d');\n    this.width = this.canvas.width;\n    this.height = this.canvas.height;\n    this.draw();\n  },\n\n  methods: {\n    draw() {\n      this.ctx.clearRect(0, 0, this.width, this.height);\n      this.ctx.fillStyle = 'blue';\n      this.ctx.fillRect(this.basket.x, this.basket.y, this.basket.width, this.basket.height);\n\n      for (const object of this.objects) {\n        this.ctx.fillStyle = 'red';\n        this.ctx.fillRect(object.x, object.y, object.width, object.height);\n        object.y += object.speed;\n\n        if (this.isCollision(this.basket, object)) {\n          this.objects.splice(this.objects.indexOf(object), 1);\n          this.score++;\n        } else if (object.y > this.height) {\n          this.objects.splice(this.objects.indexOf(object), 1);\n        }\n      }\n\n      requestAnimationFrame(this.draw);\n    },\n\n    createObject() {\n      const object = {\n        x: Math.random() * (this.width - 20),\n        y: 0,\n        width: 20,\n        height: 20,\n        speed: Math.random() * 3 + 1 // Random speed between 1 and 4\n\n      };\n      this.objects.push(object);\n    },\n\n    moveBasket() {\n      const speed = 5;\n\n      if (this.isMovingLeft) {\n        this.basket.x = Math.max(0, this.basket.x - speed);\n      }\n\n      if (this.isMovingRight) {\n        this.basket.x = Math.min(this.width - this.basket.width, this.basket.x + speed);\n      }\n    },\n\n    handleKeyDown(event) {\n      if (event.key === 'ArrowLeft') {\n        this.isMovingLeft = true;\n      } else if (event.key === 'ArrowRight') {\n        this.isMovingRight = true;\n      } else if (event.key === 'ArrowUp') {\n        this.moveBasketUp();\n      }\n    },\n\n    handleKeyUp(event) {\n      if (event.key === 'ArrowLeft') {\n        this.isMovingLeft = false;\n      } else if (event.key === 'ArrowRight') {\n        this.isMovingRight = false;\n      }\n    },\n\n    moveBasketUp() {\n      const originalY = this.basket.y;\n      const offsetY = -50;\n      this.basket.y += offsetY;\n      setTimeout(() => {\n        this.basket.y = originalY;\n      }, 500); // Adjust the duration as needed (in milliseconds)\n    },\n\n    isCollision(rect1, rect2) {\n      return rect1.x < rect2.x + rect2.width && rect1.x + rect1.width > rect2.x && rect1.y < rect2.y + rect2.height && rect1.y + rect1.height > rect2.y;\n    }\n\n  },\n\n  created() {\n    setInterval(this.createObject, 1000); // Create new objects every second\n  }\n\n};","map":{"version":3,"mappings":"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","names":["data","canvas","ctx","width","height","basket","x","y","objects","score","isMovingLeft","isMovingRight","mounted","$refs","getContext","draw","methods","clearRect","fillStyle","fillRect","object","speed","isCollision","splice","indexOf","requestAnimationFrame","createObject","Math","random","push","moveBasket","max","min","handleKeyDown","event","key","moveBasketUp","handleKeyUp","originalY","offsetY","setTimeout","rect1","rect2","created","setInterval"],"sourceRoot":"","sources":["C:\\Users\\kk\\Desktop\\Web\\Web-Project\\vuejs\\game-master\\src\\components\\menus\\TreasurePage.vue"],"sourcesContent":["<template>\r\n     <div class=\"game\" tabindex=\"0\" @keydown=\"handleKeyDown\" @keyup=\"handleKeyUp\">\r\n       <div class=\"canvas-container\">\r\n         <canvas ref=\"canvas\" width=\"400\" height=\"400\"></canvas>\r\n       </div>\r\n       <p>Score: {{ score }}</p>\r\n     </div>\r\n   </template>\r\n   \r\n   <script>\r\n   export default {\r\n     data() {\r\n       return {\r\n         canvas: null,\r\n         ctx: null,\r\n         width: 0,\r\n         height: 0,\r\n         basket: {\r\n           x: 0,\r\n           y: 0,\r\n           width: 100,\r\n           height: 20,\r\n         },\r\n         objects: [],\r\n         score: 0,\r\n         isMovingLeft: false,\r\n         isMovingRight: false,\r\n       };\r\n     },\r\n     mounted() {\r\n       this.canvas = this.$refs.canvas;\r\n       this.ctx = this.canvas.getContext('2d');\r\n       this.width = this.canvas.width;\r\n       this.height = this.canvas.height;\r\n       this.draw();\r\n     },\r\n     methods: {\r\n       draw() {\r\n         this.ctx.clearRect(0, 0, this.width, this.height);\r\n         this.ctx.fillStyle = 'blue';\r\n         this.ctx.fillRect(this.basket.x, this.basket.y, this.basket.width, this.basket.height);\r\n   \r\n         for (const object of this.objects) {\r\n           this.ctx.fillStyle = 'red';\r\n           this.ctx.fillRect(object.x, object.y, object.width, object.height);\r\n   \r\n           object.y += object.speed;\r\n           if (this.isCollision(this.basket, object)) {\r\n             this.objects.splice(this.objects.indexOf(object), 1);\r\n             this.score++;\r\n           } else if (object.y > this.height) {\r\n             this.objects.splice(this.objects.indexOf(object), 1);\r\n           }\r\n         }\r\n   \r\n         requestAnimationFrame(this.draw);\r\n       },\r\n       createObject() {\r\n         const object = {\r\n           x: Math.random() * (this.width - 20),\r\n           y: 0,\r\n           width: 20,\r\n           height: 20,\r\n           speed: Math.random() * 3 + 1, // Random speed between 1 and 4\r\n         };\r\n         this.objects.push(object);\r\n       },\r\n       moveBasket() {\r\n         const speed = 5;\r\n         if (this.isMovingLeft) {\r\n           this.basket.x = Math.max(0, this.basket.x - speed);\r\n         }\r\n         if (this.isMovingRight) {\r\n           this.basket.x = Math.min(this.width - this.basket.width, this.basket.x + speed);\r\n         }\r\n       },\r\n       handleKeyDown(event) {\r\n         if (event.key === 'ArrowLeft') {\r\n           this.isMovingLeft = true;\r\n         } else if (event.key === 'ArrowRight') {\r\n           this.isMovingRight = true;\r\n         } else if (event.key === 'ArrowUp') {\r\n           this.moveBasketUp();\r\n         }\r\n       },\r\n       handleKeyUp(event) {\r\n         if (event.key === 'ArrowLeft') {\r\n           this.isMovingLeft = false;\r\n         } else if (event.key === 'ArrowRight') {\r\n           this.isMovingRight = false;\r\n         }\r\n       },\r\n       moveBasketUp() {\r\n         const originalY = this.basket.y;\r\n         const offsetY = -50;\r\n         this.basket.y += offsetY;\r\n         setTimeout(() => {\r\n        this.basket.y = originalY;\r\n      }, 500); // Adjust the duration as needed (in milliseconds)\r\n    },\r\n    isCollision(rect1, rect2) {\r\n      return (\r\n        rect1.x < rect2.x + rect2.width &&\r\n        rect1.x + rect1.width > rect2.x &&\r\n        rect1.y < rect2.y + rect2.height &&\r\n        rect1.y + rect1.height > rect2.y\r\n      );\r\n    },\r\n  },\r\n  created() {\r\n    setInterval(this.createObject, 1000); // Create new objects every second\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.canvas-container {\r\n  position: relative;\r\n  width: 400px;\r\n  height: 400px;\r\n  border: 1px solid #000;\r\n}\r\n\r\ncanvas {\r\n  border: 1px solid #000;\r\n}\r\n\r\n.game {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n</style>\r\n   "]},"metadata":{},"sourceType":"module"}