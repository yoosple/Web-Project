{"ast":null,"code":"export default {\n  props: {\n    height: {\n      type: Number,\n      required: true\n    }\n  },\n\n  mounted() {\n    this.canvas = this.$refs.canvas;\n    this.ctx = this.canvas.getContext('2d');\n    this.width = this.canvas.width;\n    this.height = this.canvas.height;\n    this.basket = {\n      x: this.width / 2 - 25,\n      y: this.height - 50,\n      width: 50,\n      height: 50\n    };\n    this.objects = [];\n    this.score = 0;\n    this.addObjects();\n    this.draw();\n    window.addEventListener('keydown', this.moveBasket);\n  },\n\n  methods: {\n    addObjects() {\n      const numObjects = 1;\n\n      for (let i = 0; i < numObjects; i++) {\n        const object = {\n          x: Math.floor(Math.random() * this.width),\n          y: this.height - Math.floor(Math.random() * (this.height / 2)),\n          width: 50,\n          height: 50,\n          color: '#' + Math.floor(Math.random() * 16777215).toString(16),\n          speed: Math.floor(Math.random() * 5) + 1\n        };\n        this.objects.push(object);\n      }\n    },\n\n    draw() {\n      this.ctx.clearRect(0, 0, this.width, this.height);\n      this.ctx.fillStyle = '#00FF00';\n      this.ctx.fillRect(this.basket.x, this.basket.y, this.basket.width, this.basket.height);\n\n      for (let i = 0; i < this.objects.length; i++) {\n        const object = this.objects[i];\n        this.ctx.fillStyle = object.color;\n        this.ctx.fillRect(object.x, object.y, object.width, object.height);\n        object.y += object.speed;\n\n        if (object.y + object.height > this.basket.y && object.x > this.basket.x && object.x < this.basket.x + this.basket.width) {\n          this.objects.splice(i, 1);\n          this.addObjects();\n          this.score += 1;\n        } else if (object.y + object.height > this.height) {\n          this.objects.splice(i, 1);\n          this.addObjects();\n        }\n      }\n\n      requestAnimationFrame(this.draw);\n    },\n\n    moveBasket(event) {\n      const speed = 10;\n\n      if (event.key === 'ArrowLeft') {\n        if (this.basket.x > 0) {\n          this.basket.x -= speed;\n        }\n      } else if (event.key === 'ArrowRight') {\n        if (this.basket.x + this.basket.width < this.width) {\n          this.basket.x += speed;\n        }\n      }\n    }\n\n  },\n\n  beforeUnmount() {\n    window.removeEventListener('keydown', this.moveBasket);\n  }\n\n};","map":{"version":3,"mappings":"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","names":["props","height","type","Number","required","mounted","canvas","$refs","ctx","getContext","width","basket","x","y","objects","score","addObjects","draw","window","addEventListener","moveBasket","methods","numObjects","i","object","Math","floor","random","color","toString","speed","push","clearRect","fillStyle","fillRect","length","splice","requestAnimationFrame","event","key","beforeUnmount","removeEventListener"],"sourceRoot":"","sources":["C:\\Users\\kk\\Desktop\\Web\\Web-Project\\vuejs\\game-master\\src\\components\\menus\\TreasurePage.vue"],"sourcesContent":["<template>\r\n     <div class=\"game\" ref=\"game\">\r\n       <canvas ref=\"canvas\" width=\"400\" height=\"400\"></canvas>\r\n       <p>Score: {{ score }}</p>\r\n     </div>\r\n   </template>\r\n   \r\n   <script>\r\n   export default {\r\n     props: {\r\n       height: {\r\n         type: Number,\r\n         required: true,\r\n       },\r\n     },\r\n     mounted() {\r\n       this.canvas = this.$refs.canvas;\r\n       this.ctx = this.canvas.getContext('2d');\r\n       this.width = this.canvas.width;\r\n       this.height = this.canvas.height;\r\n       this.basket = {\r\n         x: this.width / 2 - 25,\r\n         y: this.height - 50,\r\n         width: 50,\r\n         height: 50,\r\n       };\r\n       this.objects = [];\r\n       this.score = 0;\r\n       this.addObjects();\r\n       this.draw();\r\n       window.addEventListener('keydown', this.moveBasket);\r\n     },\r\n     methods: {\r\n       addObjects() {\r\n         const numObjects = 1;\r\n         for (let i = 0; i < numObjects; i++) {\r\n           const object = {\r\n             x: Math.floor(Math.random() * this.width),\r\n             y: this.height - Math.floor(Math.random() * (this.height / 2)),\r\n             width: 50,\r\n             height: 50,\r\n             color: '#' + Math.floor(Math.random() * 16777215).toString(16),\r\n             speed: Math.floor(Math.random() * 5) + 1,\r\n           };\r\n           this.objects.push(object);\r\n         }\r\n       },\r\n       draw() {\r\n         this.ctx.clearRect(0, 0, this.width, this.height);\r\n         this.ctx.fillStyle = '#00FF00';\r\n         this.ctx.fillRect(this.basket.x, this.basket.y, this.basket.width, this.basket.height);\r\n         for (let i = 0; i < this.objects.length; i++) {\r\n           const object = this.objects[i];\r\n           this.ctx.fillStyle = object.color;\r\n           this.ctx.fillRect(object.x, object.y, object.width, object.height);\r\n           object.y += object.speed;\r\n           if (object.y + object.height > this.basket.y && object.x > this.basket.x && object.x < this.basket.x + this.basket.width) {\r\n             this.objects.splice(i, 1);\r\n             this.addObjects();\r\n             this.score += 1;\r\n           } else if (object.y + object.height > this.height) {\r\n             this.objects.splice(i, 1);\r\n             this.addObjects();\r\n           }\r\n         }\r\n         requestAnimationFrame(this.draw);\r\n       },\r\n       moveBasket(event) {\r\n         const speed = 10;\r\n         if (event.key === 'ArrowLeft') {\r\n           if (this.basket.x > 0) {\r\n             this.basket.x -= speed;\r\n           }\r\n         } else if (event.key === 'ArrowRight') {\r\n           if (this.basket.x + this.basket.width < this.width) {\r\n             this.basket.x += speed;\r\n           }\r\n         }\r\n       },\r\n     },\r\n     beforeUnmount() {\r\n       window.removeEventListener('keydown', this.moveBasket);\r\n     },\r\n   };\r\n   </script>\r\n   \r\n   <style scoped>\r\n   canvas {\r\n     border: 1px solid #000;\r\n   }\r\n   </style>\r\n   "]},"metadata":{},"sourceType":"module"}