{"ast":null,"code":"export default {\n  state() {\n    return {\n      cells: [],\n      crossClass: {},\n      finished: false,\n      message: '',\n      oScore: parseInt(localStorage.getItem('oScore') || 0),\n      messageStatus: 'danger',\n      sign: 'x',\n      signO: 'o',\n      signX: 'x',\n      started: false,\n      winningOrder: [],\n      winningOrders: [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]],\n      xScore: parseInt(localStorage.getItem('xScore') || 0)\n    };\n  },\n\n  getters: {\n    cells: state => state.cells,\n    crossClass: state => {\n      const winningOrder = state.winningOrder;\n\n      if (winningOrder && winningOrder.length > 0) {\n        return {\n          'cross-line-012': winningOrder.every(w => [0, 1, 2].includes(w)),\n          'cross-line-345': winningOrder.every(w => [3, 4, 5].includes(w)),\n          'cross-line-678': winningOrder.every(w => [6, 7, 8].includes(w)),\n          'cross-line-036': winningOrder.every(w => [0, 3, 6].includes(w)),\n          'cross-line-147': winningOrder.every(w => [1, 4, 7].includes(w)),\n          'cross-line-258': winningOrder.every(w => [2, 5, 8].includes(w)),\n          'cross-line-048': winningOrder.every(w => [0, 4, 8].includes(w)),\n          'cross-line-246': winningOrder.every(w => [2, 4, 6].includes(w))\n        };\n      }\n\n      return {};\n    },\n    finished: state => state.finished,\n    message: state => state.message,\n    oScore: state => state.oScore,\n    messageStatus: state => state.messageStatus,\n    sign: state => state.sign,\n    signO: state => state.signO,\n    signX: state => state.signX,\n    started: state => state.started,\n    winningOrder: state => state.winningOrder,\n    winningOrders: state => state.winningOrders,\n    xScore: state => state.xScore\n  },\n  mutations: {\n    addCell(state, cell) {\n      state.cells.push(cell);\n    },\n\n    incrementOScore(state) {\n      state.oScore++;\n      localStorage.setItem('oScore', state.oScore.toString());\n    },\n\n    incrementXScore(state) {\n      state.xScore++;\n      localStorage.setItem('xScore', state.xScore.toString());\n    },\n\n    resetScores(state) {\n      state.oScore = 0;\n      state.xScore = 0;\n      localStorage.setItem('oScore', '0');\n      localStorage.setItem('xScore', '0');\n    },\n\n    setCrossClass(state, payload) {\n      state.crossClass = payload;\n    },\n\n    setFinished(state, payload) {\n      state.finished = payload;\n    },\n\n    setMessage(state, payload) {\n      state.message = payload;\n    },\n\n    setMessageStatus(state, payload) {\n      state.messageStatus = payload;\n    },\n\n    setSign(state, payload) {\n      state.sign = payload;\n    },\n\n    setWinningOrder(state, payload) {\n      state.winningOrder = payload;\n    },\n\n    startGame(state) {\n      // Initial values for new game\n      state.message = '';\n      state.sign = state.signX;\n      state.started = true;\n      state.finished = false;\n      state.winningOrder = [];\n      state.crossClass = {};\n      state.cells = [];\n    }\n\n  },\n  actions: {\n    addCell(context, payload) {\n      context.commit('addCell', payload);\n    },\n\n    getCellSign(context, payload) {\n      context.commit('getCellSign', payload);\n    },\n\n    incrementOScore(context) {\n      context.commit('incrementOScore');\n    },\n\n    incrementXScore(context) {\n      context.commit('incrementXScore');\n    },\n\n    resetScores(context) {\n      context.commit('resetScores');\n    },\n\n    setCrossClass(context, payload) {\n      context.commit('setCrossClass', payload);\n    },\n\n    setFinished(context, payload) {\n      context.commit('setFinished', payload);\n    },\n\n    setMessage(context, payload) {\n      context.commit('setMessage', payload);\n    },\n\n    setMessageStatus(context, payload) {\n      context.commit('setMessageStatus', payload);\n    },\n\n    setSign(context, payload) {\n      context.commit('setSign', payload);\n    },\n\n    setWinningOrder(context, payload) {\n      context.commit('setWinningOrder', payload);\n    },\n\n    startGame(context) {\n      context.commit('startGame');\n    },\n\n    winnerControl(context, payload) {\n      context.commit('winnerControl', payload);\n    }\n\n  }\n};","map":{"version":3,"sources":["C:/Users/kk/Desktop/Web/game-master/src/store/modules/game.js"],"names":["state","cells","crossClass","finished","message","oScore","parseInt","localStorage","getItem","messageStatus","sign","signO","signX","started","winningOrder","winningOrders","xScore","getters","length","every","w","includes","mutations","addCell","cell","push","incrementOScore","setItem","toString","incrementXScore","resetScores","setCrossClass","payload","setFinished","setMessage","setMessageStatus","setSign","setWinningOrder","startGame","actions","context","commit","getCellSign","winnerControl"],"mappings":"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","sourcesContent":["export default {\n\tstate () {\n\t\treturn {\n\t\t\tcells: [],\n\t\t\tcrossClass: {},\n\t\t\tfinished: false,\n\t\t\tmessage: '',\n\t\t\toScore: parseInt(localStorage.getItem('oScore') || 0),\n\t\t\tmessageStatus: 'danger',\n\t\t\tsign: 'x',\n\t\t\tsignO: 'o',\n\t\t\tsignX: 'x',\n\t\t\tstarted: false,\n\t\t\twinningOrder: [],\n\t\t\twinningOrders: [\n\t\t\t\t[0, 1, 2],\n\t\t\t\t[3, 4, 5],\n\t\t\t\t[6, 7, 8],\n\t\t\t\t[0, 3, 6],\n\t\t\t\t[1, 4, 7],\n\t\t\t\t[2, 5, 8],\n\t\t\t\t[0, 4, 8],\n\t\t\t\t[2, 4, 6],\n\t\t\t],\n\t\t\txScore: parseInt(localStorage.getItem('xScore') || 0),\n\t\t}\n\t},\n\tgetters: {\n\t\tcells : state => state.cells,\n\t\tcrossClass : state => {\n\t\t\tconst winningOrder = state.winningOrder;\n\t\t\tif (winningOrder && winningOrder.length > 0) {\n\t\t\t\treturn {\n\t\t\t\t\t'cross-line-012': winningOrder.every(w => [0, 1, 2].includes(w)),\n\t\t\t\t\t'cross-line-345': winningOrder.every(w => [3, 4, 5].includes(w)),\n\t\t\t\t\t'cross-line-678': winningOrder.every(w => [6, 7, 8].includes(w)),\n\t\t\t\t\t'cross-line-036': winningOrder.every(w => [0, 3, 6].includes(w)),\n\t\t\t\t\t'cross-line-147': winningOrder.every(w => [1, 4, 7].includes(w)),\n\t\t\t\t\t'cross-line-258': winningOrder.every(w => [2, 5, 8].includes(w)),\n\t\t\t\t\t'cross-line-048': winningOrder.every(w => [0, 4, 8].includes(w)),\n\t\t\t\t\t'cross-line-246': winningOrder.every(w => [2, 4, 6].includes(w)),\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {}\n\t\t},\n\t\tfinished : state => state.finished,\n\t\tmessage : state => state.message,\n\t\toScore : state => state.oScore,\n\t\tmessageStatus : state => state.messageStatus,\n\t\tsign : state => state.sign,\n\t\tsignO : state => state.signO,\n\t\tsignX : state => state.signX,\n\t\tstarted : state => state.started,\n\t\twinningOrder : state => state.winningOrder,\n\t\twinningOrders : state => state.winningOrders,\n\t\txScore : state => state.xScore,\n\t},\n\tmutations: {\n\t\taddCell(state, cell) {\n\t\t\tstate.cells.push(cell)\n\t\t},\n\t\tincrementOScore(state) {\n\t\t\tstate.oScore++\n\t\t\tlocalStorage.setItem('oScore', state.oScore.toString())\n\t\t},\n\t\tincrementXScore(state) {\n\t\t\tstate.xScore++\n\t\t\tlocalStorage.setItem('xScore', state.xScore.toString())\n\t\t},\n\t\tresetScores(state) {\n\t\t\tstate.oScore = 0\n\t\t\tstate.xScore = 0\n\t\t\tlocalStorage.setItem('oScore', '0')\n\t\t\tlocalStorage.setItem('xScore', '0')\n\t\t},\n\t\tsetCrossClass(state, payload) {\n\t\t\tstate.crossClass = payload\n\t\t},\n\t\tsetFinished(state, payload) {\n\t\t\tstate.finished = payload\n\t\t},\n\t\tsetMessage(state, payload) {\n\t\t\tstate.message = payload\n\t\t},\n\t\tsetMessageStatus(state, payload) {\n\t\t\tstate.messageStatus = payload\n\t\t},\n\t\tsetSign(state, payload) {\n\t\t\tstate.sign = payload\n\t\t},\n\t\tsetWinningOrder(state, payload) {\n\t\t\tstate.winningOrder = payload\n\t\t},\n\t\tstartGame(state) {\n\t\t\t// Initial values for new game\n\t\t\tstate.message = '';\n\t\t\tstate.sign = state.signX;\n\t\t\tstate.started = true;\n\t\t\tstate.finished = false;\n\t\t\tstate.winningOrder = [];\n\t\t\tstate.crossClass = {};\n\t\t\tstate.cells = []\n\t\t},\n\t},\n\tactions: {\n\t\taddCell(context, payload) {\n\t\t\tcontext.commit('addCell', payload)\n\t\t},\n\t\tgetCellSign(context, payload) {\n\t\t\tcontext.commit('getCellSign', payload)\n\t\t},\n\t\tincrementOScore(context) {\n\t\t\tcontext.commit('incrementOScore')\n\t\t},\n\t\tincrementXScore(context) {\n\t\t\tcontext.commit('incrementXScore')\n\t\t},\n\t\tresetScores(context) {\n\t\t\tcontext.commit('resetScores')\n\t\t},\n\t\tsetCrossClass(context, payload) {\n\t\t\tcontext.commit('setCrossClass', payload)\n\t\t},\n\t\tsetFinished(context, payload) {\n\t\t\tcontext.commit('setFinished', payload)\n\t\t},\n\t\tsetMessage(context, payload) {\n\t\t\tcontext.commit('setMessage', payload)\n\t\t},\n\t\tsetMessageStatus(context, payload) {\n\t\t\tcontext.commit('setMessageStatus', payload)\n\t\t},\n\t\tsetSign(context, payload) {\n\t\t\tcontext.commit('setSign', payload)\n\t\t},\n\t\tsetWinningOrder(context, payload) {\n\t\t\tcontext.commit('setWinningOrder', payload)\n\t\t},\n\t\tstartGame(context) {\n\t\t\tcontext.commit('startGame')\n\t\t},\n\t\twinnerControl(context, payload) {\n\t\t\tcontext.commit('winnerControl', payload)\n\t\t},\n\t},\n}\n"]},"metadata":{},"sourceType":"module"}