{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-fd28126e\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"game\"\n};\nconst _hoisted_2 = {\n  ref: \"canvas\",\n  width: \"400\",\n  height: \"400\"\n};\nconst _hoisted_3 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [!$data.gameStarted ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.startGame && $options.startGame(...args))\n  }, \"Start\")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"canvas\", _hoisted_2, null, 512\n  /* NEED_PATCH */\n  ), $data.gameStarted ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, \"Score: \" + _toDisplayString($data.score), 1\n  /* TEXT */\n  )) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;;;;AACUA,OAAK,EAAC;;;AAEDC,KAAG,EAAC;AAASC,OAAK,EAAC;AAAMC,QAAM,EAAC;;;;;;uBAF1CC,oBAIM,KAJN,cAIM,EAHWC,mCAAfD,oBAA6D,QAA7D,EAA6D;UAAA;AAAhCE,WAAK,yCAAEC,iDAAF;AAA2B,GAA7D,EAA+C,OAA/C,sCAGI,EAFJC,oBAAuD,QAAvD,cAAuD,IAAvD,EAAuD;AAAA;AAAvD,GAEI,EADKH,mCAATD,oBAA4C,GAA5C,EAA4CK,UAA5C,EAAsB,YAAOC,iBAAGL,WAAH,CAA7B,EAAqC;AAAA;AAArC,wCACI,CAJN","names":["class","ref","width","height","_createElementBlock","$data","onClick","$options","_createElementVNode","_hoisted_3","_toDisplayString"],"sourceRoot":"","sources":["C:\\Users\\kk\\Desktop\\Web\\Web-Project\\vuejs\\game-master\\src\\components\\menus\\TreasurePage.vue"],"sourcesContent":["<template>\r\n     <div class=\"game\">\r\n       <button v-if=\"!gameStarted\" @click=\"startGame\">Start</button>\r\n       <canvas ref=\"canvas\" width=\"400\" height=\"400\"></canvas>\r\n       <p v-if=\"gameStarted\">Score: {{ score }}</p>\r\n     </div>\r\n   </template>\r\n   \r\n   <script>\r\n   export default {\r\n     props: {\r\n       height: {\r\n         type: Number,\r\n         required: true,\r\n       },\r\n     },\r\n     data() {\r\n       return {\r\n         gameStarted: false,\r\n         score: 0,\r\n         objects: [],\r\n       };\r\n     },\r\n     mounted() {\r\n       // ...\r\n     },\r\n     methods: {\r\n       startGame() {\r\n         this.gameStarted = true;\r\n         this.score = 0;\r\n         this.objects = [];\r\n         this.addObjects();\r\n         this.draw();\r\n         window.addEventListener('keydown', this.moveBasket);\r\n       },\r\n       addObjects() {\r\n         const numObjects = 1;\r\n         for (let i = 0; i < numObjects; i++) {\r\n           const object = {\r\n             x: Math.floor(Math.random() * this.width),\r\n             y: 0,\r\n             width: 50,\r\n             height: 50,\r\n             color: '#' + Math.floor(Math.random() * 16777215).toString(16),\r\n             speed: Math.random() * 3 + 1, // 랜덤한 속도 설정 (1에서 4 사이)\r\n             score: Math.floor(Math.random() * 10) - 5, // 랜덤한 점수 설정 (-5에서 4 사이)\r\n           };\r\n           this.objects.push(object);\r\n         }\r\n       },\r\n       draw() {\r\n         this.ctx.clearRect(0, 0, this.width, this.height);\r\n         for (let i = 0; i < this.objects.length; i++) {\r\n           const object = this.objects[i];\r\n           this.ctx.fillStyle = object.color;\r\n           this.ctx.fillRect(object.x, object.y, object.width, object.height);\r\n           object.y += object.speed;\r\n           if (object.y + object.height > this.basket.y && object.x > this.basket.x && object.x < this.basket.x + this.basket.width) {\r\n             this.objects.splice(i, 1);\r\n             this.score += object.score;\r\n             this.addObjects();\r\n           } else if (object.y + object.height > this.height) {\r\n             this.objects.splice(i, 1);\r\n             this.addObjects();\r\n           }\r\n         }\r\n         requestAnimationFrame(this.draw);\r\n       },\r\n       // ...\r\n     },\r\n     beforeUnmount() {\r\n       window.removeEventListener('keydown', this.moveBasket);\r\n     },\r\n   };\r\n   </script>\r\n   \r\n   <style scoped>\r\n   canvas {\r\n     border: 1px solid #000;\r\n   }\r\n   </style>"]},"metadata":{},"sourceType":"module"}