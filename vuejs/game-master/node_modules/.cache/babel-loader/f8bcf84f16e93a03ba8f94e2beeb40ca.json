{"ast":null,"code":"import { mapGetters, mapActions } from 'vuex';\nimport Board from './Board';\nimport Message from './Message';\nimport Scores from './Scores';\nimport Help from './Help';\nimport IButton from './ui/IButton';\nexport default {\n  name: \"Game\",\n  components: {\n    Board,\n    Help,\n    IButton,\n    Message,\n    Scores\n  },\n  watch: {\n    cells: {\n      handler(val) {\n        const signedXValues = val.filter(v => v.sign === this.signX);\n        const signedXOrders = signedXValues.map(s => s.order);\n        const signedOValues = val.filter(v => v.sign === this.signO);\n        const signedOOrders = signedOValues.map(s => s.order); // Who won\n\n        if (this.winnerControl(signedXOrders)) {\n          this.setMessage('ðŸš€ðŸš€ðŸš€ X Won ðŸš€ðŸš€ðŸš€');\n          this.setMessageStatus('success');\n          this.setFinished(true);\n          this.setSign(this.signX);\n          this.incrementXScore();\n        } else if (this.winnerControl(signedOOrders)) {\n          this.setMessage('ðŸš€ðŸš€ðŸš€ O Won ðŸš€ðŸš€ðŸš€');\n          this.setMessageStatus('success');\n          this.setFinished(true);\n          this.setSign(this.signO);\n          this.incrementOScore();\n        } else {\n          // Game over\n          if (val.length >= 9) {\n            this.setMessage('Game Over. Nobody Won...');\n            this.setMessageStatus('danger');\n            this.setFinished(true);\n          }\n        }\n      },\n\n      deep: true\n    }\n  },\n  computed: { ...mapGetters(['cells', 'started', 'finished', 'signX', 'signO', 'winningOrder', 'winningOrders'])\n  },\n  methods: { ...mapActions(['incrementOScore', 'incrementXScore', 'resetScores', 'setCrossClass', 'setFinished', 'setMessage', 'setMessageStatus', 'setSign', 'setWinningOrder', 'startGame', 'winnerControl']),\n\n    winnerControl(orders) {\n      return this.winningOrders.some(w => {\n        const result = w.every(value => orders.includes(value));\n\n        if (result) {\n          this.setWinningOrder(w);\n        }\n\n        return result;\n      });\n    }\n\n  },\n\n  mounted() {\n    // listen keydown for start game and reset scores\n    document.addEventListener('keydown', e => {\n      if (e.key === 'r') {\n        this.resetScores();\n      } else if (e.key === 's') {\n        this.startGame();\n      }\n    });\n  }\n\n};","map":{"version":3,"mappings":"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","names":["mapGetters","mapActions","Board","Message","Scores","Help","IButton","name","components","watch","cells","handler","val","signedXValues","filter","v","sign","signX","signedXOrders","map","s","order","signedOValues","signO","signedOOrders","winnerControl","setMessage","setMessageStatus","setFinished","setSign","incrementXScore","incrementOScore","length","deep","computed","methods","orders","winningOrders","some","w","result","every","value","includes","setWinningOrder","mounted","document","addEventListener","e","key","resetScores","startGame"],"sourceRoot":"","sources":["C:\\Users\\kk\\Desktop\\Web\\game-master\\src\\components\\menus\\tic-tac-toe\\Game.vue"],"sourcesContent":["<template>\r\n  <div class=\"game\">\r\n    <Help />\r\n    <Scores/>\r\n    <Board/>\r\n    <Message/>\r\n    <div class=\"button-container \">\r\n      <IButton v-if=\"!started || finished\" @click=\"startGame\">\r\n        {{ finished ? 'RESTART' : 'START' }} (s)\r\n      </IButton>\r\n      <IButton v-if=\"!started || finished\" @click=\"resetScores\">\r\n        RESET SCORES (r)\r\n      </IButton>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {mapGetters, mapActions} from 'vuex'\r\nimport Board from './Board'\r\nimport Message from './Message'\r\nimport Scores from './Scores'\r\nimport Help from './Help'\r\nimport IButton from './ui/IButton'\r\nexport default {\r\n  name: \"Game\",\r\n  components: {\r\n    Board,\r\n    Help,\r\n    IButton,\r\n    Message,\r\n    Scores,\r\n  },\r\n  watch: {\r\n    cells: {\r\n      handler(val) {\r\n        const signedXValues = val.filter(v => v.sign === this.signX)\r\n        const signedXOrders = signedXValues.map(s => s.order)\r\n        const signedOValues = val.filter(v => v.sign === this.signO)\r\n        const signedOOrders = signedOValues.map(s => s.order)\r\n        // Who won\r\n        if (this.winnerControl(signedXOrders)) {\r\n          this.setMessage('ðŸš€ðŸš€ðŸš€ X Won ðŸš€ðŸš€ðŸš€')\r\n          this.setMessageStatus('success')\r\n          this.setFinished(true)\r\n          this.setSign(this.signX)\r\n          this.incrementXScore()\r\n        } else if (this.winnerControl(signedOOrders)) {\r\n          this.setMessage('ðŸš€ðŸš€ðŸš€ O Won ðŸš€ðŸš€ðŸš€')\r\n          this.setMessageStatus('success')\r\n          this.setFinished(true)\r\n          this.setSign(this.signO)\r\n          this.incrementOScore()\r\n        } else {\r\n          // Game over\r\n          if (val.length >= 9) {\r\n            this.setMessage('Game Over. Nobody Won...')\r\n            this.setMessageStatus('danger')\r\n            this.setFinished(true)\r\n          }\r\n        }\r\n      },\r\n      deep: true\r\n    },\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n      'cells',\r\n      'started',\r\n      'finished',\r\n      'signX',\r\n      'signO',\r\n      'winningOrder',\r\n      'winningOrders',\r\n    ])\r\n  },\r\n  methods: {\r\n    ...mapActions([\r\n      'incrementOScore',\r\n      'incrementXScore',\r\n      'resetScores',\r\n      'setCrossClass',\r\n      'setFinished',\r\n      'setMessage',\r\n      'setMessageStatus',\r\n      'setSign',\r\n      'setWinningOrder',\r\n      'startGame',\r\n      'winnerControl',\r\n    ]),\r\n    winnerControl(orders) {\r\n      return this.winningOrders.some(w => {\r\n        const result = w.every(value => orders.includes(value))\r\n        if (result) {\r\n          this.setWinningOrder(w)\r\n        }\r\n        return result\r\n      })\r\n    },\r\n  },\r\n  mounted() {\r\n    // listen keydown for start game and reset scores\r\n    document.addEventListener('keydown', e => {\r\n      if (e.key === 'r') {\r\n        this.resetScores()\r\n      } else if (e.key === 's') {\r\n        this.startGame()\r\n      }\r\n    })\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.game {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: 60px;\r\n}\r\n</style>\r\nÂ© 2022 GitHub, Inc.\r\nTerms\r\nPr"]},"metadata":{},"sourceType":"module"}