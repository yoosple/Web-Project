{"ast":null,"code":"export default {\n  data() {\n    return {\n      objects: [{\n        points: -Math.floor(Math.random() * (50 - 5 + 1) + 5),\n        size: 50,\n        speed: 4000,\n        visible: true\n      }, {\n        points: -Math.floor(Math.random() * (50 - 5 + 1) + 5),\n        size: 50,\n        speed: 4000,\n        visible: true\n      }, {\n        points: -Math.floor(Math.random() * (50 - 5 + 1) + 5),\n        size: 50,\n        speed: 4000,\n        visible: true\n      }, {\n        points: 5,\n        size: 60,\n        speed: 4000,\n        visible: true\n      }, {\n        points: 5,\n        size: 60,\n        speed: 4000,\n        visible: true\n      }, {\n        points: 5,\n        size: 60,\n        speed: 4000,\n        visible: true\n      }, {\n        points: 10,\n        size: 60,\n        speed: 3000,\n        visible: true\n      }, {\n        points: 10,\n        size: 60,\n        speed: 3000,\n        visible: true\n      }, {\n        points: 15,\n        size: 50,\n        speed: 2000,\n        visible: true\n      }, {\n        points: 15,\n        size: 50,\n        speed: 2000,\n        visible: true\n      }, {\n        points: 20,\n        size: 40,\n        speed: 1000,\n        visible: true\n      }, {\n        points: 30,\n        size: 30,\n        speed: 500,\n        visible: true\n      }],\n      score: 0,\n      gameCleared: false\n    };\n  },\n\n  mounted() {\n    this.moveObjects();\n  },\n\n  methods: {\n    moveObject(object) {\n      object.x = Math.floor(Math.random() * (this.boardWidth - object.size));\n      object.y = Math.floor(Math.random() * (this.boardHeight - object.size));\n      setTimeout(() => {\n        this.moveObject(object);\n      }, object.speed);\n    },\n\n    moveObjects() {\n      this.$nextTick(() => {\n        for (const object of this.objects) {\n          setTimeout(() => {\n            this.moveObject(object);\n          }, 0);\n        }\n      });\n    },\n\n    objectClicked(points, object) {\n      this.score += points;\n      object.visible = false;\n\n      if (points > 0) {\n        this.positiveObjectsLeft -= 1;\n\n        if (this.positiveObjectsLeft === 0) {\n          this.gameCleared = true;\n        }\n      }\n    },\n\n    missedClick() {\n      this.score -= 1;\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["data","objects","points","Math","floor","random","size","speed","visible","score","gameCleared","mounted","moveObjects","methods","moveObject","object","x","boardWidth","y","boardHeight","setTimeout","$nextTick","objectClicked","positiveObjectsLeft","missedClick"],"sourceRoot":"","sources":["C:\\Users\\kk\\Desktop\\Web\\Web-Project\\vuejs\\game-master\\src\\components\\menus\\EaglePage.vue"],"sourcesContent":["<template>\r\n   <div>\r\n      <h1>움직이는 공 맞추기</h1>\r\n      <div class=\"container\">\r\n         <div id=\"game-board\" @click=\"missedClick\">\r\n            <div v-for=\"(object, index) in objects\" :key=\"index\" class=\"object\" :class=\"'object-' + index\"\r\n               :style=\"{ top: object.y + 'px', left: object.x + 'px' }\" :data-size=\"object.size\"\r\n               @click.stop=\"objectClicked(object.points, object)\" v-show=\"object.visible\"></div>\r\n         </div>\r\n         <div class=\"game-cleared\" v-if=\"gameCleared\">게임 클리어! 축하합니다!</div>\r\n      </div>\r\n      <p>Score: {{ score }}</p>\r\n   </div>\r\n</template>\r\n \r\n<script>\r\nexport default {\r\n   data() {\r\n      return {\r\n         objects: [\r\n            { points: -Math.floor(Math.random() * (50 - 5 + 1) + 5), size: 50, speed: 4000, visible: true },\r\n            { points: -Math.floor(Math.random() * (50 - 5 + 1) + 5), size: 50, speed: 4000, visible: true },\r\n            { points: -Math.floor(Math.random() * (50 - 5 + 1) + 5), size: 50, speed: 4000, visible: true },\r\n            { points: 5, size: 60, speed: 4000, visible: true },\r\n            { points: 5, size: 60, speed: 4000, visible: true },\r\n            { points: 5, size: 60, speed: 4000, visible: true },\r\n            { points: 10, size: 60, speed: 3000, visible: true },\r\n            { points: 10, size: 60, speed: 3000, visible: true },\r\n            { points: 15, size: 50, speed: 2000, visible: true },\r\n            { points: 15, size: 50, speed: 2000, visible: true },\r\n            { points: 20, size: 40, speed: 1000, visible: true },\r\n            { points: 30, size: 30, speed: 500, visible: true },\r\n         ],\r\n         score: 0,\r\n         gameCleared: false,\r\n      };\r\n   },\r\n   mounted() {\r\n      this.moveObjects();\r\n   },\r\n   methods: {\r\n      moveObject(object) {\r\n         object.x = Math.floor(Math.random() * (this.boardWidth - object.size));\r\n         object.y = Math.floor(Math.random() * (this.boardHeight - object.size));\r\n\r\n         setTimeout(() => {\r\n            this.moveObject(object);\r\n         }, object.speed);\r\n      },\r\n      moveObjects() {\r\n         this.$nextTick(() => {\r\n            for (const object of this.objects) {\r\n               setTimeout(() => {\r\n                  this.moveObject(object);\r\n               }, 0);\r\n            }\r\n         });\r\n      },\r\n      objectClicked(points, object) {\r\n         this.score += points;\r\n         object.visible = false;\r\n\r\n         if (points > 0) {\r\n            this.positiveObjectsLeft -= 1;\r\n            if (this.positiveObjectsLeft === 0) {\r\n            this.gameCleared = true;\r\n            }\r\n         }\r\n      },\r\n      missedClick() {\r\n         this.score -= 1;\r\n      },\r\n   },\r\n};\r\n</script>\r\n \r\n<style scoped>\r\n#game-board {\r\n   position: relative;\r\n   width: 600px;\r\n   height: 400px;\r\n   border: 1px solid black;\r\n}\r\n\r\n.object {\r\n   position: absolute;\r\n   background-color: red;\r\n   border-radius: 50%;\r\n}\r\n\r\n.object-0,\r\n.object-1,\r\n.object-2 {\r\n   background-color: purple;\r\n}\r\n\r\n.container {\r\n   display: flex;\r\n   align-items: center;\r\n   justify-content: center;\r\n   width: 100%;\r\n}\r\n.game-cleared {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    font-size: 24px;\r\n    font-weight: bold;\r\n    color: green;\r\n  }\r\n</style>\r\n\r\n<style>\r\n/* 동적으로 물체의 크기를 설정하기 위한 CSS */\r\n.object[data-size=\"50\"] {\r\n   width: 50px;\r\n   height: 50px;\r\n}\r\n\r\n.object[data-size=\"40\"] {\r\n   width: 40px;\r\n   height: 40px;\r\n}\r\n\r\n.object[data-size=\"30\"] {\r\n   width: 30px;\r\n   height: 30px;\r\n}\r\n\r\n.object[data-size=\"20\"] {\r\n   width: 20px;\r\n   height: 20px;\r\n}\r\n\r\n.object[data-size=\"10\"] {\r\n   width: 10px;\r\n   height: 10px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}