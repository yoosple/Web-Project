{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-6220f3f2\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"game\"\n};\nconst _hoisted_2 = {\n  class: \"score\"\n};\nconst _hoisted_3 = {\n  class: \"direction-keys\"\n};\nconst _hoisted_4 = {\n  class: \"current-stage\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"game-status\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, \"점수: \" + _toDisplayString($data.score), 1\n  /* TEXT */\n  ), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $options.pressKey('up'))\n  }, \"↑\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $options.pressKey('left'))\n  }, \"←\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => $options.pressKey('down'))\n  }, \"↓\"), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = $event => $options.pressKey('right'))\n  }, \"→\")]), _createElementVNode(\"div\", _hoisted_4, \"스테이지: \" + _toDisplayString($data.currentStage + 1), 1\n  /* TEXT */\n  ), $data.gameOver ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \"게임 오버\")) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;;;;AACQA,OAAK,EAAC;;;AACLA,OAAK,EAAC;;;AACNA,OAAK,EAAC;;;AAMNA,OAAK,EAAC;;;;AACNA,OAAK,EAAC;;;uBATZC,oBAUK,KAVL,cAUK,CATJC,oBAAwC,KAAxC,cAAmB,SAAIC,iBAAGC,WAAH,CAAvB,EAA+B;AAAA;AAA/B,GASI,EARJF,oBAKM,KALN,cAKM,CAJJA,oBAA0C,QAA1C,EAA0C;AAAjCG,WAAK,sCAAEC,kBAAQ,IAAR,CAAF;AAA4B,GAA1C,EAAgC,GAAhC,CAII,EAHJJ,oBAA4C,QAA5C,EAA4C;AAAnCG,WAAK,sCAAEC,kBAAQ,MAAR,CAAF;AAA8B,GAA5C,EAAkC,GAAlC,CAGI,EAFJJ,oBAA4C,QAA5C,EAA4C;AAAnCG,WAAK,sCAAEC,kBAAQ,MAAR,CAAF;AAA8B,GAA5C,EAAkC,GAAlC,CAEI,EADJJ,oBAA6C,QAA7C,EAA6C;AAApCG,WAAK,sCAAEC,kBAAQ,OAAR,CAAF;AAA+B,GAA7C,EAAmC,GAAnC,CACI,CALN,CAQI,EAFJJ,oBAA6D,KAA7D,cAA2B,WAAMC,iBAAGC,qBAAY,CAAf,CAAjC,EAAgD;AAAA;AAAhD,GAEI,EAD2BA,gCAA/BH,oBAAoD,KAApD,cAAyC,OAAzC,sCACI,CAVL","names":["class","_createElementBlock","_createElementVNode","_toDisplayString","$data","onClick","$options"],"sourceRoot":"","sources":["C:\\Users\\kk\\Desktop\\Web\\Web-Project\\vuejs\\game-master\\src\\components\\menus\\DancePage.vue"],"sourcesContent":["<template>\r\n   <div class=\"game\">\r\n    <div class=\"score\">점수: {{ score }}</div>\r\n    <div class=\"direction-keys\">\r\n      <button @click=\"pressKey('up')\">↑</button>\r\n      <button @click=\"pressKey('left')\">←</button>\r\n      <button @click=\"pressKey('down')\">↓</button>\r\n      <button @click=\"pressKey('right')\">→</button>\r\n    </div>\r\n    <div class=\"current-stage\">스테이지: {{ currentStage + 1 }}</div>\r\n    <div class=\"game-status\" v-if=\"gameOver\">게임 오버</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      score: 0,\r\n      currentStage: 0,\r\n      stages: [\r\n        ['up', 'down', 'left', 'right'],\r\n        // 다음 스테이지에 대한 방향키 배열을 추가합니다.\r\n      ],\r\n      currentKeyIndex: 0,\r\n      gameOver: false,\r\n    };\r\n  },\r\n  mounted() {\r\n    window.addEventListener('keydown', this.handleKeydown);\r\n  },\r\n  beforeUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeydown);\r\n  },\r\n  methods: {\r\n    handleKeydown(event) {\r\n      let key;\r\n      switch (event.code) {\r\n        case 'ArrowUp':\r\n          key = 'up';\r\n          break;\r\n        case 'ArrowDown':\r\n          key = 'down';\r\n          break;\r\n        case 'ArrowLeft':\r\n          key = 'left';\r\n          break;\r\n        case 'ArrowRight':\r\n          key = 'right';\r\n          break;\r\n        default:\r\n          return;\r\n      }\r\n      this.pressKey(key);\r\n    },\r\n    pressKey(key) {\r\n      if (this.gameOver) return;\r\n\r\n      if (this.stages[this.currentStage][this.currentKeyIndex] === key) {\r\n        this.score += 10;\r\n        this.currentKeyIndex++;\r\n\r\n        if (this.currentKeyIndex === this.stages[this.currentStage].length) {\r\n          this.currentKeyIndex = 0;\r\n          this.currentStage++;\r\n\r\n          if (this.currentStage === this.stages.length) {\r\n            this.gameOver = true;\r\n          }\r\n        }\r\n      } else {\r\n        this.currentKeyIndex = 0;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.game {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.direction-keys {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-template-rows: 1fr 1fr;\r\n  gap: 10px;\r\n  margin: 20px;\r\n}\r\n\r\nbutton {\r\n  font-size: 1.5rem;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}