{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-fd28126e\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"game\"\n};\nconst _hoisted_2 = {\n  class: \"canvas-container\"\n};\nconst _hoisted_3 = {\n  ref: \"canvas\",\n  width: \"400\",\n  height: \"400\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"canvas\", _hoisted_3, null, 512\n  /* NEED_PATCH */\n  )]), _createElementVNode(\"p\", null, \"Score: \" + _toDisplayString($data.score), 1\n  /* TEXT */\n  )]);\n}","map":{"version":3,"mappings":";;;;;AACUA,OAAK,EAAC;;;AACJA,OAAK,EAAC;;;AACDC,KAAG,EAAC;AAASC,OAAK,EAAC;AAAMC,QAAM,EAAC;;;uBAF5CC,oBAKM,KALN,cAKM,CAJJC,oBAEM,KAFN,cAEM,CADJA,oBAAuD,QAAvD,cAAuD,IAAvD,EAAuD;AAAA;AAAvD,GACI,CAFN,CAII,EADJA,oBAAyB,GAAzB,EAAyB,IAAzB,EAAG,YAAOC,iBAAGC,WAAH,CAAV,EAAkB;AAAA;AAAlB,GACI,CALN","names":["class","ref","width","height","_createElementBlock","_createElementVNode","_toDisplayString","$data"],"sourceRoot":"","sources":["C:\\Users\\kk\\Desktop\\Web\\Web-Project\\vuejs\\game-master\\src\\components\\menus\\TreasurePage.vue"],"sourcesContent":["<template>\r\n     <div class=\"game\">\r\n       <div class=\"canvas-container\">\r\n         <canvas ref=\"canvas\" width=\"400\" height=\"400\"></canvas>\r\n       </div>\r\n       <p>Score: {{ score }}</p>\r\n     </div>\r\n   </template>\r\n   \r\n   <script>\r\n   export default {\r\n     data() {\r\n       return {\r\n         gameStarted: false,\r\n         score: 0,\r\n         treasures: [],\r\n         canvas: null,\r\n         ctx: null,\r\n         width: 0,\r\n         height: 0,\r\n         basket: null,\r\n         keysPressed: {},\r\n       };\r\n     },\r\n     mounted() {\r\n       this.canvas = this.$refs.canvas;\r\n       this.ctx = this.canvas.getContext('2d');\r\n       this.width = this.canvas.width;\r\n       this.height = this.canvas.height;\r\n       this.basket = {\r\n         x: this.width / 2 - 25,\r\n         y: this.height - 50,\r\n         width: 50,\r\n         height: 50,\r\n       };\r\n       window.addEventListener('keydown', this.handleKeyDown);\r\n       window.addEventListener('keyup', this.handleKeyUp);\r\n       this.startGame();\r\n     },\r\n     methods: {\r\n       startGame() {\r\n         this.gameStarted = true;\r\n         this.score = 0;\r\n         this.treasures = [];\r\n         this.addTreasures();\r\n         this.draw();\r\n       },\r\n       addTreasures() {\r\n         const numTreasures = 1;\r\n         for (let i = 0; i < numTreasures; i++) {\r\n           const treasure = {\r\n             x: Math.floor(Math.random() * this.width),\r\n             y: 0,\r\n             width: 30,\r\n             height: 30,\r\n             color: '#' + Math.floor(Math.random() * 16777215).toString(16),\r\n             score: Math.floor(Math.random() * 10) + 1, // Random score between 1 and 10\r\n           };\r\n           this.treasures.push(treasure);\r\n         }\r\n       },\r\n       draw() {\r\n         this.ctx.clearRect(0, 0, this.width, this.height);\r\n         for (let i = 0; i < this.treasures.length; i++) {\r\n           const treasure = this.treasures[i];\r\n           this.ctx.fillStyle = treasure.color;\r\n           this.ctx.fillRect(treasure.x, treasure.y, treasure.width, treasure.height);\r\n           treasure.y += 1; // Adjust the speed of treasure falling\r\n           if (treasure.y + treasure.height > this.basket.y && treasure.x > this.basket.x && treasure.x < this.basket.x + this.basket.width) {\r\n             this.treasures.splice(i, 1);\r\n             this.score += treasure.score;\r\n             this.addTreasures();\r\n           } else if (treasure.y + treasure.height > this.height) {\r\n             this.treasures.splice(i, 1);\r\n             this.addTreasures();\r\n           }\r\n         }\r\n         this.moveBasket();\r\n         requestAnimationFrame(this.draw);\r\n       },\r\n       moveBasket() {\r\n         const speed = 10;\r\n         if (this.keysPressed.ArrowLeft && this.basket.x > 0) {\r\n           this.basket.x -= speed;\r\n         } else if (this.keysPressed.ArrowRight && this.basket.x + this.basket.width < this.width) {\r\n           this.basket.x += speed;\r\n         }\r\n       },\r\n       handleKeyDown(event) {\r\n         this.keysPressed[event.key] = true;\r\n       },\r\n       handleKeyUp(event) {\r\n         this.keysPressed[event.key] = false;\r\n       },\r\n     },\r\n     beforeUnmount() {\r\n       window.removeEventListener('keydown', this.handleKeyDown);\r\n    window.removeEventListener('keyup', this.handleKeyUp);\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.game {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.canvas-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 400px;\r\n  height: 400px;\r\n  border: 1px solid #000;\r\n}\r\n\r\ncanvas {\r\n  border: 1px solid #000;\r\n}\r\n</style>\r\n\r\n   "]},"metadata":{},"sourceType":"module"}