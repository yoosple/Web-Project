{"ast":null,"code":"export default {\n  data() {\n    return {\n      score: 0,\n      currentStage: 0,\n      stages: [['up', 'down', 'left', 'right'] // 다음 스테이지에 대한 방향키 배열을 추가합니다.\n      ],\n      currentKeyIndex: 0,\n      gameOver: false\n    };\n  },\n\n  methods: {\n    pressKey(key) {\n      if (this.gameOver) return;\n\n      if (this.stages[this.currentStage][this.currentKeyIndex] === key) {\n        this.score += 10;\n        this.currentKeyIndex++;\n\n        if (this.currentKeyIndex === this.stages[this.currentStage].length) {\n          this.currentKeyIndex = 0;\n          this.currentStage++;\n\n          if (this.currentStage === this.stages.length) {\n            this.gameOver = true;\n          }\n        }\n      } else {\n        this.currentKeyIndex = 0;\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAeA,eAAe;AACbA,MAAI,GAAG;AACL,WAAO;AACLC,WAAK,EAAE,CADF;AAELC,kBAAY,EAAE,CAFT;AAGLC,YAAM,EAAE,CACN,CAAC,IAAD,EAAO,MAAP,EAAe,MAAf,EAAuB,OAAvB,CADM,CAEN;AAFM,OAHH;AAOLC,qBAAe,EAAE,CAPZ;AAQLC,cAAQ,EAAE;AARL,KAAP;AAUD,GAZY;;AAabC,SAAO,EAAE;AACPC,YAAQ,CAACC,GAAD,EAAM;AACZ,UAAI,KAAKH,QAAT,EAAmB;;AAEnB,UAAI,KAAKF,MAAL,CAAY,KAAKD,YAAjB,EAA+B,KAAKE,eAApC,MAAyDI,GAA7D,EAAkE;AAChE,aAAKP,KAAL,IAAc,EAAd;AACA,aAAKG,eAAL;;AAEA,YAAI,KAAKA,eAAL,KAAyB,KAAKD,MAAL,CAAY,KAAKD,YAAjB,EAA+BO,MAA5D,EAAoE;AAClE,eAAKL,eAAL,GAAuB,CAAvB;AACA,eAAKF,YAAL;;AAEA,cAAI,KAAKA,YAAL,KAAsB,KAAKC,MAAL,CAAYM,MAAtC,EAA8C;AAC5C,iBAAKJ,QAAL,GAAgB,IAAhB;AACF;AACF;AACF,OAZA,MAYO;AACL,aAAKD,eAAL,GAAuB,CAAvB;AACF;AACD;;AAnBM;AAbI,CAAf","names":["data","score","currentStage","stages","currentKeyIndex","gameOver","methods","pressKey","key","length"],"sourceRoot":"","sources":["C:\\Users\\kk\\Desktop\\Web\\Web-Project\\vuejs\\game-master\\src\\components\\menus\\DancePage.vue"],"sourcesContent":["<template>\r\n   <div class=\"game\">\r\n    <div class=\"score\">점수: {{ score }}</div>\r\n    <div class=\"direction-keys\">\r\n      <button @click=\"pressKey('up')\">↑</button>\r\n      <button @click=\"pressKey('left')\">←</button>\r\n      <button @click=\"pressKey('down')\">↓</button>\r\n      <button @click=\"pressKey('right')\">→</button>\r\n    </div>\r\n    <div class=\"current-stage\">스테이지: {{ currentStage + 1 }}</div>\r\n    <div class=\"game-status\" v-if=\"gameOver\">게임 오버</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      score: 0,\r\n      currentStage: 0,\r\n      stages: [\r\n        ['up', 'down', 'left', 'right'],\r\n        // 다음 스테이지에 대한 방향키 배열을 추가합니다.\r\n      ],\r\n      currentKeyIndex: 0,\r\n      gameOver: false,\r\n    };\r\n  },\r\n  methods: {\r\n    pressKey(key) {\r\n      if (this.gameOver) return;\r\n\r\n      if (this.stages[this.currentStage][this.currentKeyIndex] === key) {\r\n        this.score += 10;\r\n        this.currentKeyIndex++;\r\n\r\n        if (this.currentKeyIndex === this.stages[this.currentStage].length) {\r\n          this.currentKeyIndex = 0;\r\n          this.currentStage++;\r\n\r\n          if (this.currentStage === this.stages.length) {\r\n            this.gameOver = true;\r\n          }\r\n        }\r\n      } else {\r\n        this.currentKeyIndex = 0;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.game {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.direction-keys {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-template-rows: 1fr 1fr;\r\n  gap: 10px;\r\n  margin: 20px;\r\n}\r\n\r\nbutton {\r\n  font-size: 1.5rem;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}