{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-fd28126e\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"game\"\n};\nconst _hoisted_2 = {\n  ref: \"canvas\",\n  width: \"400\",\n  height: \"400\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"canvas\", _hoisted_2, null, 512\n  /* NEED_PATCH */\n  )]);\n}","map":{"version":3,"mappings":";;;;;AACUA,OAAK,EAAC;;;AACDC,KAAG,EAAC;AAASC,OAAK,EAAC;AAAMC,QAAM,EAAC;;;uBAD1CC,oBAEM,KAFN,cAEM,CADJC,oBAAuD,QAAvD,cAAuD,IAAvD,EAAuD;AAAA;AAAvD,GACI,CAFN","names":["class","ref","width","height","_createElementBlock","_createElementVNode"],"sourceRoot":"","sources":["C:\\Users\\kk\\Desktop\\Web\\Web-Project\\vuejs\\game-master\\src\\components\\menus\\TreasurePage.vue"],"sourcesContent":["<template>\r\n     <div class=\"game\">\r\n       <canvas ref=\"canvas\" width=\"400\" height=\"400\"></canvas>\r\n     </div>\r\n   </template>\r\n   \r\n   <script>\r\n   export default {\r\n     mounted() {\r\n       this.canvas = this.$refs.canvas;\r\n       this.ctx = this.canvas.getContext('2d');\r\n       this.width = this.canvas.width;\r\n       this.height = this.canvas.height;\r\n       this.objects = [];\r\n       this.score = 0;\r\n       this.addObjects();\r\n       this.draw();\r\n     },\r\n     methods: {\r\n       addObjects() {\r\n         const numObjects = 5;\r\n         for (let i = 0; i < numObjects; i++) {\r\n           const object = {\r\n             x: Math.floor(Math.random() * this.width),\r\n             y: -Math.floor(Math.random() * this.height),\r\n             width: 50,\r\n             height: 50,\r\n             color: '#' + Math.floor(Math.random() * 16777215).toString(16),\r\n             speed: Math.floor(Math.random() * 5) + 1,\r\n           };\r\n           this.objects.push(object);\r\n         }\r\n       },\r\n       draw() {\r\n         this.ctx.clearRect(0, 0, this.width, this.height);\r\n         for (let i = 0; i < this.objects.length; i++) {\r\n           const object = this.objects[i];\r\n           this.ctx.fillStyle = object.color;\r\n           this.ctx.fillRect(object.x, object.y, object.width, object.height);\r\n           object.y += object.speed;\r\n           if (object.y > this.height) {\r\n             this.objects.splice(i, 1);\r\n             this.addObjects();\r\n           }\r\n         }\r\n         this.score += 1;\r\n         requestAnimationFrame(this.draw);\r\n       },\r\n     },\r\n   };\r\n   </script>\r\n   \r\n   <style scoped>\r\n   canvas {\r\n     border: 1px solid #000;\r\n   }\r\n   </style>"]},"metadata":{},"sourceType":"module"}