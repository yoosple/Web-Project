{"ast":null,"code":"export default {\n  data() {\n    return {\n      gameStarted: false,\n      score: 0,\n      treasures: [],\n      canvas: null,\n      ctx: null,\n      width: 0,\n      height: 0,\n      basket: null,\n      keysPressed: {}\n    };\n  },\n\n  mounted() {},\n\n  methods: {\n    startGame() {\n      this.canvas = this.$refs.canvas;\n      this.ctx = this.canvas.getContext('2d');\n      this.width = this.canvas.width;\n      this.height = this.canvas.height;\n      this.basket = {\n        x: this.width / 2 - 25,\n        y: this.height - 50,\n        width: 50,\n        height: 50\n      };\n      window.addEventListener('keydown', this.handleKeyDown);\n      window.addEventListener('keyup', this.handleKeyUp);\n      this.gameStarted = true;\n      this.score = 0;\n      this.treasures = [];\n      this.addTreasures();\n      this.draw();\n    },\n\n    addTreasures() {\n      const numTreasures = 1;\n\n      for (let i = 0; i < numTreasures; i++) {\n        const treasure = {\n          x: Math.floor(Math.random() * this.width),\n          y: 0,\n          width: 30,\n          height: 30,\n          color: '#' + Math.floor(Math.random() * 16777215).toString(16),\n          score: Math.floor(Math.random() * 10) + 1 // Random score between 1 and 10\n\n        };\n        this.treasures.push(treasure);\n      }\n    },\n\n    draw() {\n      this.ctx.clearRect(0, 0, this.width, this.height);\n\n      for (let i = 0; i < this.treasures.length; i++) {\n        const treasure = this.treasures[i];\n        this.ctx.fillStyle = treasure.color;\n        this.ctx.fillRect(treasure.x, treasure.y, treasure.width, treasure.height);\n        treasure.y += 1; // Adjust the speed of treasure falling\n\n        if (treasure.y + treasure.height > this.basket.y && treasure.x > this.basket.x && treasure.x < this.basket.x + this.basket.width) {\n          this.treasures.splice(i, 1);\n          this.score += treasure.score;\n          this.addTreasures();\n        } else if (treasure.y + treasure.height > this.height) {\n          this.treasures.splice(i, 1);\n          this.addTreasures();\n        }\n      }\n\n      this.moveBasket();\n      requestAnimationFrame(this.draw);\n    },\n\n    moveBasket() {\n      const speed = 10;\n\n      if (this.keysPressed.ArrowLeft && this.basket.x > 0) {\n        this.basket.x -= speed;\n      } else if (this.keysPressed.ArrowRight && this.basket.x + this.basket.width < this.width) {\n        this.basket.x += speed;\n      }\n    },\n\n    handleKeyDown(event) {\n      this.keysPressed[event.key] = true;\n    },\n\n    handleKeyUp(event) {\n      this.keysPressed[event.key] = false;\n    }\n\n  },\n\n  beforeUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n    window.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n};","map":{"version":3,"mappings":"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","names":["data","gameStarted","score","treasures","canvas","ctx","width","height","basket","keysPressed","mounted","methods","startGame","$refs","getContext","x","y","window","addEventListener","handleKeyDown","handleKeyUp","addTreasures","draw","numTreasures","i","treasure","Math","floor","random","color","toString","push","clearRect","length","fillStyle","fillRect","splice","moveBasket","requestAnimationFrame","speed","ArrowLeft","ArrowRight","event","key","beforeUnmount","removeEventListener"],"sourceRoot":"","sources":["C:\\Users\\kk\\Desktop\\Web\\Web-Project\\vuejs\\game-master\\src\\components\\menus\\TreasurePage.vue"],"sourcesContent":["<template>\r\n     <div class=\"game\">\r\n          <button v-if=\"!gameStarted\" @click=\"startGame\">Start</button>\r\n          <div class=\"canvas-container\" v-if=\"gameStarted\">\r\n               <canvas ref=\"canvas\" width=\"400\" height=\"400\"></canvas>\r\n          </div>\r\n          <p v-if=\"gameStarted\">Score: {{ score }}</p>\r\n     </div>\r\n</template>\r\n   \r\n<script>\r\nexport default {\r\n     data() {\r\n          return {\r\n               gameStarted: false,\r\n               score: 0,\r\n               treasures: [],\r\n               canvas: null,\r\n               ctx: null,\r\n               width: 0,\r\n               height: 0,\r\n               basket: null,\r\n               keysPressed: {},\r\n          };\r\n     },\r\n     mounted() {\r\n     },\r\n     methods: {\r\n          startGame() {\r\n\r\n               this.canvas = this.$refs.canvas;\r\n               this.ctx = this.canvas.getContext('2d');\r\n               this.width = this.canvas.width;\r\n               this.height = this.canvas.height;\r\n               this.basket = {\r\n                    x: this.width / 2 - 25,\r\n                    y: this.height - 50,\r\n                    width: 50,\r\n                    height: 50,\r\n               };\r\n               window.addEventListener('keydown', this.handleKeyDown);\r\n               window.addEventListener('keyup', this.handleKeyUp);\r\n\r\n               this.gameStarted = true;\r\n               this.score = 0;\r\n               this.treasures = [];\r\n               this.addTreasures();\r\n               this.draw();\r\n          },\r\n          addTreasures() {\r\n               const numTreasures = 1;\r\n               for (let i = 0; i < numTreasures; i++) {\r\n                    const treasure = {\r\n                         x: Math.floor(Math.random() * this.width),\r\n                         y: 0,\r\n                         width: 30,\r\n                         height: 30,\r\n                         color: '#' + Math.floor(Math.random() * 16777215).toString(16),\r\n                         score: Math.floor(Math.random() * 10) + 1, // Random score between 1 and 10\r\n                    };\r\n                    this.treasures.push(treasure);\r\n               }\r\n          },\r\n          draw() {\r\n               this.ctx.clearRect(0, 0, this.width, this.height);\r\n               for (let i = 0; i < this.treasures.length; i++) {\r\n                    const treasure = this.treasures[i];\r\n                    this.ctx.fillStyle = treasure.color;\r\n                    this.ctx.fillRect(treasure.x, treasure.y, treasure.width, treasure.height);\r\n                    treasure.y += 1; // Adjust the speed of treasure falling\r\n                    if (treasure.y + treasure.height > this.basket.y && treasure.x > this.basket.x && treasure.x < this.basket.x + this.basket.width) {\r\n                         this.treasures.splice(i, 1);\r\n                         this.score += treasure.score;\r\n                         this.addTreasures();\r\n                    } else if (treasure.y + treasure.height > this.height) {\r\n                         this.treasures.splice(i, 1);\r\n                         this.addTreasures();\r\n                    }\r\n               }\r\n               this.moveBasket();\r\n               requestAnimationFrame(this.draw);\r\n          },\r\n          moveBasket() {\r\n               const speed = 10;\r\n               if (this.keysPressed.ArrowLeft && this.basket.x > 0) {\r\n                    this.basket.x -= speed;\r\n               } else if (this.keysPressed.ArrowRight && this.basket.x + this.basket.width < this.width) {\r\n                    this.basket.x += speed;\r\n               }\r\n          },\r\n          handleKeyDown(event) {\r\n               this.keysPressed[event.key] = true;\r\n          }, handleKeyUp(event) {\r\n               this.keysPressed[event.key] = false;\r\n          },\r\n     },\r\n     beforeUnmount() {\r\n          window.removeEventListener('keydown', this.handleKeyDown);\r\n          window.removeEventListener('keyup', this.handleKeyUp);\r\n     },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.game {\r\n     display: flex;\r\n     flex-direction: column;\r\n     align-items: center;\r\n}\r\n\r\n.canvas-container {\r\n     display: flex;\r\n     justify-content: center;\r\n     align-items: center;\r\n     width: 400px;\r\n     height: 400px;\r\n     border: 1px solid #000;\r\n}\r\n\r\ncanvas {\r\n     border: 1px solid #000;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}