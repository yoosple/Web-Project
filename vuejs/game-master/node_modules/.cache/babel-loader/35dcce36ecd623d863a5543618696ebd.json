{"ast":null,"code":"import { mapGetters, mapActions } from \"vuex\";\nexport default {\n  name: \"Board\",\n\n  data() {\n    return {\n      processing: false\n    };\n  },\n\n  computed: { ...mapGetters(['cells', 'finished', 'crossClass', 'sign', 'signO', 'signX', 'started'])\n  },\n  methods: { ...mapActions(['addCell', 'setSign']),\n\n    cellClicked(order) {\n      if (this.started && !this.finished && !this.processing) {\n        // current cell of entered order\n        const currentCell = this.cells.find(c => c.order === order); // if current cell exist, don't anything\n\n        if (!currentCell) {\n          this.processing = true; // add cell to cell - store\n\n          this.addCell({\n            order: order,\n            sign: this.sign\n          }); // change sign\n\n          this.setSign(this.sign === this.signX ? this.signO : this.signX);\n          setTimeout(() => {\n            this.processing = false;\n          }, 333);\n        }\n      }\n    },\n\n    getCellSign(order) {\n      // find the cell\n      const cell = this.cells.find(c => c.order === order);\n\n      if (!cell) {\n        return '';\n      }\n\n      return cell.sign;\n    }\n\n  },\n\n  mounted() {\n    // listen keydown and click cell\n    document.addEventListener('keydown', e => {\n      const number = parseInt(e.key);\n\n      if (number > 0 && number < 10) {\n        this.cellClicked(number - 1);\n      }\n    });\n  }\n\n};","map":{"version":3,"mappings":"AAeA,SAAQA,UAAR,EAAoBC,UAApB,QAAqC,MAArC;AACA,eAAe;AACbC,MAAI,EAAE,OADO;;AAEbC,MAAI,GAAG;AACL,WAAO;AACLC,gBAAU,EAAE;AADP,KAAP;AAGD,GANY;;AAObC,UAAQ,EAAE,EACR,GAAGL,UAAU,CAAC,CACZ,OADY,EAEZ,UAFY,EAGZ,YAHY,EAIZ,MAJY,EAKZ,OALY,EAMZ,OANY,EAOZ,SAPY,CAAD;AADL,GAPG;AAkBbM,SAAO,EAAE,EACP,GAAGL,UAAU,CAAC,CACV,SADU,EAEV,SAFU,CAAD,CADN;;AAKPM,eAAW,CAACC,KAAD,EAAQ;AACjB,UAAI,KAAKC,OAAL,IAAgB,CAAC,KAAKC,QAAtB,IAAkC,CAAC,KAAKN,UAA5C,EAAwD;AACtD;AACA,cAAMO,WAAU,GAAI,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,KAAKA,CAAC,CAACN,KAAF,KAAYA,KAAjC,CAApB,CAFsD,CAGtD;;AACA,YAAI,CAACG,WAAL,EAAkB;AAChB,eAAKP,UAAL,GAAkB,IAAlB,CADgB,CAEhB;;AACA,eAAKW,OAAL,CAAa;AAACP,iBAAK,EAAEA,KAAR;AAAeQ,gBAAI,EAAE,KAAKA;AAA1B,WAAb,EAHgB,CAIhB;;AACA,eAAKC,OAAL,CAAa,KAAKD,IAAL,KAAc,KAAKE,KAAnB,GAA2B,KAAKC,KAAhC,GAAwC,KAAKD,KAA1D;AACAE,oBAAU,CAAC,MAAM;AACf,iBAAKhB,UAAL,GAAkB,KAAlB;AACD,WAFS,EAEP,GAFO,CAAV;AAGF;AACF;AACD,KArBM;;AAsBPiB,eAAW,CAACb,KAAD,EAAQ;AACjB;AACA,YAAMc,IAAG,GAAI,KAAKV,KAAL,CAAWC,IAAX,CAAgBC,KAAKA,CAAC,CAACN,KAAF,KAAYA,KAAjC,CAAb;;AACA,UAAI,CAACc,IAAL,EAAW;AACT,eAAO,EAAP;AACF;;AACA,aAAOA,IAAI,CAACN,IAAZ;AACD;;AA7BM,GAlBI;;AAiDbO,SAAO,GAAG;AACR;AACAC,YAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCC,KAAK;AACxC,YAAMC,MAAK,GAAIC,QAAQ,CAACF,CAAC,CAACG,GAAH,CAAvB;;AACA,UAAIF,MAAK,GAAI,CAAT,IAAcA,MAAK,GAAI,EAA3B,EAA+B;AAC7B,aAAKpB,WAAL,CAAiBoB,MAAK,GAAI,CAA1B;AACF;AACD,KALD;AAMF;;AAzDa,CAAf","names":["mapGetters","mapActions","name","data","processing","computed","methods","cellClicked","order","started","finished","currentCell","cells","find","c","addCell","sign","setSign","signX","signO","setTimeout","getCellSign","cell","mounted","document","addEventListener","e","number","parseInt","key"],"sourceRoot":"","sources":["C:\\Users\\kk\\Desktop\\Web\\Web-Project\\vuejs\\game-master\\src\\components\\menus\\tic-tac-toe\\Board.vue"],"sourcesContent":["<template>\r\n  <div class=\"board\" :class=\"crossClass\">\r\n    <div v-for=\"order in [...Array(9).keys()] \"\r\n         class=\"cell\"\r\n         :key=\"order\"\r\n         @click=\"cellClicked(order)\">\r\n      <span>\r\n        {{ getCellSign(order) }}\r\n      </span>\r\n      <div class=\"cell-number\" :data-number=\"order + 1\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {mapGetters, mapActions} from \"vuex\";\r\nexport default {\r\n  name: \"Board\",\r\n  data() {\r\n    return {\r\n      processing: false,\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n      'cells',\r\n      'finished',\r\n      'crossClass',\r\n      'sign',\r\n      'signO',\r\n      'signX',\r\n      'started',\r\n    ])\r\n  },\r\n  methods: {\r\n    ...mapActions([\r\n        'addCell',\r\n        'setSign',\r\n    ]),\r\n    cellClicked(order) {\r\n      if (this.started && !this.finished && !this.processing) {\r\n        // current cell of entered order\r\n        const currentCell = this.cells.find(c => c.order === order)\r\n        // if current cell exist, don't anything\r\n        if (!currentCell) {\r\n          this.processing = true;\r\n          // add cell to cell - store\r\n          this.addCell({order: order, sign: this.sign})\r\n          // change sign\r\n          this.setSign(this.sign === this.signX ? this.signO : this.signX)\r\n          setTimeout(() => {\r\n            this.processing = false\r\n          }, 333)\r\n        }\r\n      }\r\n    },\r\n    getCellSign(order) {\r\n      // find the cell\r\n      const cell = this.cells.find(c => c.order === order)\r\n      if (!cell) {\r\n        return ''\r\n      }\r\n      return cell.sign\r\n    },\r\n  },\r\n  mounted() {\r\n    // listen keydown and click cell\r\n    document.addEventListener('keydown', e => {\r\n      const number = parseInt(e.key);\r\n      if (number > 0 && number < 10) {\r\n        this.cellClicked(number - 1)\r\n      }\r\n    })\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n@import url('https://fonts.googleapis.com/css2?family=Gochi+Hand&display=swap');\r\n.board {\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  width: 420px;\r\n  height: 420px;\r\n  overflow: hidden;\r\n  position: relative;\r\n}\r\n.cell {\r\n  position: relative;\r\n  font-family: 'Gochi Hand', cursive;\r\n  width: 140px;\r\n  height: 140px;\r\n  outline: 1px solid whitesmoke;\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 130px;\r\n  color: whitesmoke;\r\n}\r\n.cell-number {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n.cell span:empty + .cell-number:after {\r\n  display: flex;\r\n  justify-content: center;\r\n  content: attr(data-number);\r\n  color: rgba(255, 255, 255, 0.05);\r\n}\r\n.cross-line {\r\n  z-index: 999;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n.cross-line-012 {\r\n  background: linear-gradient(to bottom, rgba(0, 0, 0, 0) calc(16% - 4px), lime, rgba(0, 0, 0, 0) calc(16% + 4px))\r\n}\r\n.cross-line-345 {\r\n  background: linear-gradient(to top, rgba(0, 0, 0, 0) calc(50% - 4px), lime, rgba(0, 0, 0, 0) calc(50% + 4px))\r\n}\r\n.cross-line-678 {\r\n  background: linear-gradient(to top, rgba(0, 0, 0, 0) calc(16% - 4px), lime, rgba(0, 0, 0, 0) calc(16% + 4px))\r\n}\r\n.cross-line-036 {\r\n  background: linear-gradient(to right, rgba(0, 0, 0, 0) calc(16% - 4px), lime, rgba(0, 0, 0, 0) calc(16% + 4px))\r\n}\r\n.cross-line-147 {\r\n  background: linear-gradient(to left, rgba(0, 0, 0, 0) calc(50% - 4px), lime, rgba(0, 0, 0, 0) calc(50% + 4px))\r\n}\r\n.cross-line-258 {\r\n  background: linear-gradient(to left, rgba(0, 0, 0, 0) calc(16% - 4px), lime, rgba(0, 0, 0, 0) calc(16% + 4px))\r\n}\r\n.cross-line-048 {\r\n  background: linear-gradient(to top right, rgba(0, 0, 0, 0) calc(50% - 4px), lime, rgba(0, 0, 0, 0) calc(50% + 4px))\r\n}\r\n.cross-line-246 {\r\n  background: linear-gradient(to top left, rgba(0, 0, 0, 0) calc(50% - 4px), lime, rgba(0, 0, 0, 0) calc(50% + 4px))\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}